-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'Tree Debug',
	511,
	'V_TD',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("3ae64f33-3b55-49e9-844e-59dfe3075fb6",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'executeTest',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'tc = self.testCase;

if (  self.testCase >= 100 and self.testCase < 200)
	self.paperTypeDebug();
elif ( self.testCase >= 200 and self.testCase < 300 )
	self.backCoverDebug();
elif ( self.testCase >= 300 and self.testCase < 400 )
	self.firstPagePrintDebug();
elif ( self.testCase >= 400 and self.testCase < 500 )
	self.clusterDebug();
elif ( self.testCase >= 1000 and self.testCase < 2000 )
	self.normalJob();
elif ( self.testCase >= 2000 and self.testCase < 3000 )
	self.signatureTest();
elif ( self.testCase >= 3000 and self.testCase < 3500 )
 	self.ohpInserterJob();
elif ( self.testCase >= 3500 and self.testCase < 4000 )
	self.paperColorAttr();
elif ( self.testCase >= 4000 and self.testCase < 4500 )
	self.hddFullTest();
elif ( self.testCase >= 5000 and self.testCase < 5500 )
	self.offset();
elif ( self.testCase >= 5500 and self.testCase < 5600 )
	self.blackSpeedPromote();
elif ( self.testCase >= 5600 and self.testCase < 5700 )
	self.copiesNumPrint();
elif ( self.testCase >= 5700 and self.testCase < 5800 )
	self.separatorUncollate();
elif ( self.testCase >= 5801 and self.testCase < 5900 )
	self.banner();
elif ( tc >= 5900 and tc < 6000 )
	self.waterMark_annotation();
elif ( tc >= 6000 and tc < 6100 )
	self.officialStamp();
elif ( tc >= 6100 and tc < 6200 )
	self.waitNextSheetReq();
elif ( tc >= 6200 and tc < 6300 )
	self.stapleJob();
elif ( tc >= 6300 and tc < 6400 )
	self.multiDocuments();
elif ( tc >= 6400 and tc < 6500 )
	self.batesNo();
elif ( tc >= 6500  and tc < 6600 )
	self.outtrayOccupy();
elif ( tc >= 6600 and tc < 6650 )
	self.separatorCollate();
elif ( tc >= 6650 and tc < 6700 )
	self.samplePrint();
elif ( tc >= 6700 and tc < 6750 )
	self.annotationMN();
elif ( tc >= 6750 and tc < 6800 )
	self.colorAnnotation();

elif ( tc >= 6800 and tc < 6850 )
	self.foldJob();

elif ( tc >= 6850 and tc < 6900 )
	self.traySwitch();

//20110107 debag Start (sasaki_r)
elif (tc >=6900 and tc <7000)
	V_SR_SRU::UT(testCase : tc);
//20110107 debag End (sasaki_r)

elif ( tc >= 30000 and tc < 30100 )
	self.trouble();

elif ( tc >= 35000 and tc < 35100 )
	self.paperWeight();

elif ( tc >= 35100 and tc < 35200 )
	self.subsetOffset();

elif ( tc >= 35200 and tc < 35300 )
	self.seal();

elif ( tc >= 35300 and tc < 35400 )
	self.seal2();
end if;

	
',
	1,
	'',
	"ef2593ec-6657-4858-938f-cf4aa8ac26ba");
INSERT INTO O_TFR
	VALUES ("6feaeb2e-ab18-4b04-9752-ec2b0c0564b8",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'paperTypeDebug',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if (  self.testCase == 100 )
	// 用紙種類変更確認
	//  システムデータに従うの場合のテストは、V_SDの値を切り替えて確認すること

	// 期待される結果
	//			指示					結果
	//		Tray指定 紙質指定	APS可不可(*)  	ATS 	 SysData		Tray	type	ATS
	//  1 シート目	1	Null	可能		OFF			1	0	OFF
	//  2 シート目	1	Null	可能		ON			1	0	ON
	//  3 シート目	1	Null	可能		SYS	Always		1	0	ON

	//  4 シート目	2(**)	Null	不可		ON			1	0	OFF
	
	// 5シート目	1	TEST	可能		OFF			1	TEST	OFF
	// 6シート目	1	TEST	可能		ON_M			1	TEST	ON_M
	// 7シート目	1	TEST	可能		ON			1	TEST	ON_M
	// 8シート目	1	TEST	可能		SYS	Always		1	TEST	ON
	
	// 9シート目	1	TEST	不可		ON_M			1	TEST	OFF

	//10シート目	APS	Null	-		OFF			APS	0	ON
	//11シート目	APS	Null	-		ON			APS	0	ON
	//12シート目	APS	Null	-		ON_L			APS	0	ON_L
	//13シート目	APS	Null	-		SYS	Always		APS	0	ON	

	//14シート目	APS	TEST	可能		OFF			APS	TEST	ON_M
	//15シート目	APS	TEST	可能		ON_M			APS	TEST	ON_M
	//16シート目	APS	TEST	可能		ON			APS	TEST	ON_M

	//17シート目	APS	TEST	不可		OFF			APS	TEST	ON_M
	//18シート目	APS	TEST	不可		ON_M			APS	TEST	ON_M
	//19シート目	APS	TEST	不可		ON			APS	TEST	ON_M

	//  * が不可の場合、用紙種類をIOTSHT_MEDIUM_TYPE_TEST_CANNOT_APSとすること
	// System DataはV_SDのtraySwitchを書き換える			
	// **指定トレイをAPS不可トレイにするには、FINL::getMediumTypeIntray()を書き換えて、IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APSと
	//	する（現状では、２を指定するとこれが返るようにしている）

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
//	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
			
		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
		aPage.paperType = "0";
	
		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_2";	// APS不可のトレイ
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
		aPage.paperType = "0";


		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST";

		// 第１セクション6ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST";

		// 第１セクション7ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST";


		// 第１セクション8ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST";


		// 第１セクション9ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";

		// 第１セクション10ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション11ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON";
		aPage.paperType = "0";
		
		// 第１セクション12ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
		aPage.paperType = "0";

		// 第１セクション13ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
		aPage.paperType = "0";

		// 第１セクション14ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST";

		// 第１セクション15ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST";

		// 第１セクション16ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST";


		// 第１セクション17ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";

		// 第１セクション18ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";

		// 第１セクション19ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
elif (  self.testCase == 101 )
	// 用紙種類変更確認(システムデータ=APSOnly)の残り
	//  システムデータに従うの場合のテストは、V_SDの値を切り替えて確認すること

	// 期待される結果
	//			指示					結果
	//		Tray指定 紙質指定	APS可不可(*)  	ATS 	 SysData		Tray	type	ATS
	//  1 シート目	1	Null	可能		SYS	APSOnly		1	0	OFF
	//  2シート目	1	TEST	可能		SYS	APSOnly		1	TEST	OFF
	// 3シート目	APS	Null	-		SYS	APSOnly		APS	0	ON	
	//  * が不可の場合、用紙種類をIOTSHT_MEDIUM_TYPE_TEST_CANNOT_APSとすること
	// System DataはV_SDのtraySwitchを書き換える			
	// **指定トレイをAPS不可トレイにするには、FINL::getMediumTypeIntray()を書き換えて、IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APSと
	//	する（現状では、２を指定するとこれが返るようにしている）

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
//	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TEST";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_AUTO";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
		aPage.paperType = "0";

elif ( self.testCase == 110 )
	// 用紙穴空き属性/色属性テスト

	// セクションとページのそれぞれの階層の確認を行う。

	// テストケース
	//  PP = Pre Punched / CT = ColorType
	//  
	// 	入力					期待結果
	//	SEC		PAGE				
	//  	PP	CT	PP	CT		PP	CT
	// 1	0	0	ON	0		ON	0
	// 2	0	0	OFF	PINK		OFF	PINK
	// 3	ON	RED	0	0		OFF	RED					
	// 4 	ON	RED	OFF	PINK		OFF	PINK
	// 5	0	0	0	0		OFF	0
	docID = 1101;
	// 第１セクション(Pageで属性値が決まるケース）
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.paperColorType = "0";
		aPage.paperPrePunched = "IOTSHT_PAPER_PRE_PUNCHED_ON";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.paperColorType = "IOTSHT_PAPER_COLOR_TYPE_PINK";
		aPage.paperPrePunched = "IOTSHT_PAPER_PRE_PUNCHED_OFF";


	// 第2セクション(セクションで決まる場合）
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperColorType = "IOTSHT_PAPER_COLOR_TYPE_RED";
	aSec.paperPrePunched = "IOTSHT_PAPER_PRE_PUNCHED_OFF";

		// 第2セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.paperColorType = "0";
		aPage.paperPrePunched = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.paperColorType = "IOTSHT_PAPER_COLOR_TYPE_PINK";
		aPage.paperPrePunched = "IOTSHT_PAPER_PRE_PUNCHED_OFF";

	// 第3セクション(両方Nullの場合）
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperColorType = "0";
	aSec.paperPrePunched = "0";

		// 第3セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.paperColorType = "0";
		aPage.paperPrePunched = "0";


end if;
',
	1,
	'',
	"1c02ef84-0bb2-4edd-ada7-8b3f8c413725");
INSERT INTO O_TFR
	VALUES ("2c6fa83f-5592-4b11-bf5b-aef4635252ff",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'backCoverDebug',
	'// このスクリプトを行う前にupdateJobAttributeを以下のように設定して下さい。

//------------------------------------------------------------------------
// 裏面印字裏表紙の場合

::setJobAttribute(
	jobID : param.jobID,
	dataFormat : IotSc_DataFormat::eNull,
	staple : "IOT_STAPLE_OFF",
	nSetTray : "IOTSHT_INPUT_TRAY_1",
	collateMode : collateMode,
	colorMode : "IOTSHT_COLOR_TYPE_MIX",
	internalOffset : aParamInfo.jobOffsetMode,
	outputTray : outtray,
	runLength : runLength,
	forcedDuplex : "IOT_FORCED_DUPLEX_OFF",
	interleafMode : IotSc_InterleafMode::eOff,
	nSetMediumType : "IOTSHT_MEDIUM_TYPE_TEST",
	interleafTray : "IOTSHT_INPUT_TRAY_SMH",
	interleafMediumType : "IOTSHT_MEDIUM_TYPE_THIN",
	nSet : IotSc_NSetMode::eOff,
	isProof : FALSE,
	smhConfirm : "IOT_SMH_CONFIRM_OFF",
	tonerSave : "IOTSHT_TONER_SAVE_OFF",
	originalOrder : "IOTFINL_ORIGINAL_ORDER_1TON_NORMAL",
	punchMode : "IOT_PUNCH_OFF",
	foldMode : "IOT_FOLD_OFF",
	foldBindMode : IotSc_FoldBindMode::eNull ,
	foldSide : IotSc_FoldSide::eInside ,
	foldBindNum : 0 ,
	foldBindTotalNum : 10,
	frontCoverMode : IotSc_CoverMode::eOff,
	frontCoverTray : "IOTSHT_INTRAY_SMH",
	frontCoverMediumType : "TESTTEST",
	frontCoverRunLength : 2,
	backCoverMode : IotSc_CoverMode::eOnWithImageOnlyBackfaceDuplex,
	backCoverTray : "IOTSHT_INPUT_TRAY_BACK",
	backCoverMediumType : "IOTSHT_BACK_COVER",
	backCoverRunLength : 0,
	bookletMode : IotSc_BookletMode::eOff,
	bookletDevideMode : IotSc_BookletDevideMode::eOff,
	bookletDevideNum : 20,
	exitFace : "IOTSHT_EXIT_FACE_DOWN" ,
	imageErase : IotSc_ImageEraseMode::eNull ,
	interleafSize : "IOTSHT_MEDIUM_SIZE_A4",
	interleafDirection : "IOTSHT_MEDIUM_DIRECTION_LEF",
	pageAnnotationMode : IotSc_PageAnnotationMode::eNormal,
	pageCondition : IotSc_AnnotationCondition::eAll,
	startPageOffset : 0,
	startPageNo : 0,
	endPageNo : 0,
	totalPageNo : 0,
	dateAnnotationMode : IotSc_DateAnnotationMode::eOff,
	dateCondition :  IotSc_AnnotationCondition::eAll,
	stampAnnotationMode : IotSc_StampAnnotationMode::eOff,
	stampCondition : IotSc_AnnotationCondition::eAll,
	stampColor : "IOT_IMAGE_COLOR_R",
	waterMarkMode : IotSc_WaterMarkMode::eOff,
	waterMarkColor : "IOT_IMAGE_COLOR_Y",
	copiesNumPrintMode : IotSc_CopiesNumPrintMode::eOff,
	formColor : "0" ,
	formType : IotSc_FormType::eImageOverlay,
	pageCopies : 1,
	mixPunchMode : IotSc_MixPunchMode::eOnlySameSizeOf1stSheet,
	isIncludeMixSizePaper : FALSE,
	isIncludeInvertProhibitedPaper : FALSE,
	signatureMode : aParamInfo.signature,
	copiesNumStartOffset : 1,
	isMergeImageFixedDirection : FALSE,
	typeMismatchAction : "IOT_TYPE_MISMATCH_ACTION_CHANGE_WITH_INTERACT"
	, isPaperColorAttrEnable : TRUE ,
	 frontCoverPaperColorType : "0",
	 frontCoverPaperPrePunched : "0",
	 backCoverPaperColorType :  "0",
	 backCoverPaperPrePunched : "0"
	,indicatedDuplexDirection : IotSc_DuplexDirection::eTopBottom

 );

//------------------------------------------------------------------------
// 両面印字裏表紙の場合

::setJobAttribute(
	jobID : param.jobID,
	dataFormat : IotSc_DataFormat::eNull,
	staple : "IOT_STAPLE_OFF",
	nSetTray : "IOTSHT_INPUT_TRAY_1",
	collateMode : collateMode,
	colorMode : "IOTSHT_COLOR_TYPE_MIX",
	internalOffset : aParamInfo.jobOffsetMode,
	outputTray : outtray,
	runLength : runLength,
	forcedDuplex : "IOT_FORCED_DUPLEX_OFF",
	interleafMode : IotSc_InterleafMode::eOff,
	nSetMediumType : "IOTSHT_MEDIUM_TYPE_TEST",
	interleafTray : "IOTSHT_INPUT_TRAY_SMH",
	interleafMediumType : "IOTSHT_MEDIUM_TYPE_THIN",
	nSet : IotSc_NSetMode::eOff,
	isProof : FALSE,
	smhConfirm : "IOT_SMH_CONFIRM_OFF",
	tonerSave : "IOTSHT_TONER_SAVE_OFF",
	originalOrder : "IOTFINL_ORIGINAL_ORDER_1TON_NORMAL",
	punchMode : "IOT_PUNCH_OFF",
	foldMode : "IOT_FOLD_OFF",
	foldBindMode : IotSc_FoldBindMode::eNull ,
	foldSide : IotSc_FoldSide::eInside ,
	foldBindNum : 0 ,
	foldBindTotalNum : 10,
	frontCoverMode : IotSc_CoverMode::eOff,
	frontCoverTray : "IOTSHT_INTRAY_SMH",
	frontCoverMediumType : "TESTTEST",
	frontCoverRunLength : 2,
	backCoverMode : IotSc_CoverMode::eOnWithImageSurfaceAndBackfaceDuplex,
	backCoverTray : "IOTSHT_INPUT_TRAY_BACK",
	backCoverMediumType : "IOTSHT_BACK_COVER",
	backCoverRunLength : 0,
	bookletMode : IotSc_BookletMode::eOff,
	bookletDevideMode : IotSc_BookletDevideMode::eOff,
	bookletDevideNum : 20,
	exitFace : "IOTSHT_EXIT_FACE_DOWN" ,
	imageErase : IotSc_ImageEraseMode::eNull ,
	interleafSize : "IOTSHT_MEDIUM_SIZE_A4",
	interleafDirection : "IOTSHT_MEDIUM_DIRECTION_LEF",
	pageAnnotationMode : IotSc_PageAnnotationMode::eNormal,
	pageCondition : IotSc_AnnotationCondition::eAll,
	startPageOffset : 0,
	startPageNo : 0,
	endPageNo : 0,
	totalPageNo : 0,
	dateAnnotationMode : IotSc_DateAnnotationMode::eOff,
	dateCondition :  IotSc_AnnotationCondition::eAll,
	stampAnnotationMode : IotSc_StampAnnotationMode::eOff,
	stampCondition : IotSc_AnnotationCondition::eAll,
	stampColor : "IOT_IMAGE_COLOR_R",
	waterMarkMode : IotSc_WaterMarkMode::eOff,
	waterMarkColor : "IOT_IMAGE_COLOR_Y",
	copiesNumPrintMode : IotSc_CopiesNumPrintMode::eOff,
	formColor : "0" ,
	formType : IotSc_FormType::eImageOverlay,
	pageCopies : 1,
	mixPunchMode : IotSc_MixPunchMode::eOnlySameSizeOf1stSheet,
	isIncludeMixSizePaper : FALSE,
	isIncludeInvertProhibitedPaper : FALSE,
	signatureMode : aParamInfo.signature,
	copiesNumStartOffset : 1,
	isMergeImageFixedDirection : FALSE,
	typeMismatchAction : "IOT_TYPE_MISMATCH_ACTION_CHANGE_WITH_INTERACT"
	, isPaperColorAttrEnable : TRUE ,
	 frontCoverPaperColorType : "0",
	 frontCoverPaperPrePunched : "0",
	 backCoverPaperColorType :  "0",
	 backCoverPaperPrePunched : "0"
	,indicatedDuplexDirection : IotSc_DuplexDirection::eTopBottom

 );

//------------------------------------------------------------------------
// 表面印字裏表紙の場合

::setJobAttribute(
	jobID : param.jobID,
	dataFormat : IotSc_DataFormat::eNull,
	staple : "IOT_STAPLE_OFF",
	nSetTray : "IOTSHT_INPUT_TRAY_1",
	collateMode : collateMode,
	colorMode : "IOTSHT_COLOR_TYPE_MIX",
	internalOffset : aParamInfo.jobOffsetMode,
	outputTray : outtray,
	runLength : runLength,
	forcedDuplex : "IOT_FORCED_DUPLEX_OFF",
	interleafMode : IotSc_InterleafMode::eOff,
	nSetMediumType : "IOTSHT_MEDIUM_TYPE_TEST",
	interleafTray : "IOTSHT_INPUT_TRAY_SMH",
	interleafMediumType : "IOTSHT_MEDIUM_TYPE_THIN",
	nSet : IotSc_NSetMode::eOff,
	isProof : FALSE,
	smhConfirm : "IOT_SMH_CONFIRM_OFF",
	tonerSave : "IOTSHT_TONER_SAVE_OFF",
	originalOrder : "IOTFINL_ORIGINAL_ORDER_1TON_NORMAL",
	punchMode : "IOT_PUNCH_OFF",
	foldMode : "IOT_FOLD_OFF",
	foldBindMode : IotSc_FoldBindMode::eNull ,
	foldSide : IotSc_FoldSide::eInside ,
	foldBindNum : 0 ,
	foldBindTotalNum : 10,
	frontCoverMode : IotSc_CoverMode::eOff,
	frontCoverTray : "IOTSHT_INTRAY_SMH",
	frontCoverMediumType : "TESTTEST",
	frontCoverRunLength : 2,
	backCoverMode : IotSc_CoverMode::eOnWithImageSurfaceAndBackfaceDuplex,
	backCoverTray : "IOTSHT_INPUT_TRAY_BACK",
	backCoverMediumType : "IOTSHT_BACK_COVER",
	backCoverRunLength : 0,
	bookletMode : IotSc_BookletMode::eOff,
	bookletDevideMode : IotSc_BookletDevideMode::eOff,
	bookletDevideNum : 20,
	exitFace : "IOTSHT_EXIT_FACE_DOWN" ,
	imageErase : IotSc_ImageEraseMode::eNull ,
	interleafSize : "IOTSHT_MEDIUM_SIZE_A4",
	interleafDirection : "IOTSHT_MEDIUM_DIRECTION_LEF",
	pageAnnotationMode : IotSc_PageAnnotationMode::eNormal,
	pageCondition : IotSc_AnnotationCondition::eAll,
	startPageOffset : 0,
	startPageNo : 0,
	endPageNo : 0,
	totalPageNo : 0,
	dateAnnotationMode : IotSc_DateAnnotationMode::eOff,
	dateCondition :  IotSc_AnnotationCondition::eAll,
	stampAnnotationMode : IotSc_StampAnnotationMode::eOff,
	stampCondition : IotSc_AnnotationCondition::eAll,
	stampColor : "IOT_IMAGE_COLOR_R",
	waterMarkMode : IotSc_WaterMarkMode::eOff,
	waterMarkColor : "IOT_IMAGE_COLOR_Y",
	copiesNumPrintMode : IotSc_CopiesNumPrintMode::eOff,
	formColor : "0" ,
	formType : IotSc_FormType::eImageOverlay,
	pageCopies : 1,
	mixPunchMode : IotSc_MixPunchMode::eOnlySameSizeOf1stSheet,
	isIncludeMixSizePaper : FALSE,
	isIncludeInvertProhibitedPaper : FALSE,
	signatureMode : aParamInfo.signature,
	copiesNumStartOffset : 1,
	isMergeImageFixedDirection : FALSE,
	typeMismatchAction : "IOT_TYPE_MISMATCH_ACTION_CHANGE_WITH_INTERACT"
	, isPaperColorAttrEnable : TRUE ,
	 frontCoverPaperColorType : "0",
	 frontCoverPaperPrePunched : "0",
	 backCoverPaperColorType :  "0",
	 backCoverPaperPrePunched : "0"
	,indicatedDuplexDirection : IotSc_DuplexDirection::eTopBottom
 );
		',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// このスクリプトに先立ち、Descriptionを参照して、updateJobAttribute()を書き換えること


if (  self.testCase == 200 )
	// 片面 1ページ

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

elif (  self.testCase == 201 )
	// 片面 2ページ

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;
elif (  self.testCase == 202 )
	// 片面 4ページ

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


elif (  self.testCase == 210 )
	// 両面 1ページ

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

elif (  self.testCase == 211 )
	// 両面 2ページ

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;
elif (  self.testCase == 212 )
	// 両面 5ページ

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

elif (  self.testCase == 213 )
	// 両面 6ページ

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション6ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;
elif (  self.testCase == 214 )
	// 裏表紙白紙＋両面奇数枚のデバッグ（修正版号50番対応）

	docID = 1101;
	create object instance aFrontCover of V_CV;
	aFrontCover.outputSize = "FRONTCOVER_TEST_SIZE";
	aFrontCover.inputTray = "IOTSHT_INTRAY_FRONT_COVER";
	aFrontCover.direction = "IOTSHT_MEDIUM_DIRECTION_SEF";
	aFrontCover.paperType = "IOTSHT_MEDIUM_TYPE_FRONT_COVER";
	aFrontCover.paperType = "IOTSHT_TRAY_SWITCH_BY_SYSTEM";
	aFrontCover.paperColorType = "0";
	aFrontCover.paperPrePunched = "0";
	aFrontCover.isFront = TRUE;
	

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


elif (  self.testCase == 220 )
	// 表表紙のデバッグ（修正版号46番対応）
	// 片面 1ページ

	docID = 1101;
	create object instance aFrontCover of V_CV;
	aFrontCover.outputSize = "FRONTCOVER_TEST_SIZE";
	aFrontCover.inputTray = "IOTSHT_INTRAY_FRONT_COVER";
	aFrontCover.direction = "IOTSHT_MEDIUM_DIRECTION_SEF";
	aFrontCover.paperType = "IOTSHT_MEDIUM_TYPE_FRONT_COVER";
	aFrontCover.paperType = "IOTSHT_TRAY_SWITCH_BY_SYSTEM";
	aFrontCover.paperColorType = "0";
	aFrontCover.paperPrePunched = "0";
	aFrontCover.isFront = TRUE;
	

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;
elif ( self.testCase == 241 )
	// 裏表紙白紙＋両面奇数枚+HDDフルのデバッグ
	// 修正番号169対応
	// システムデータの設定

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.backCoverMode = IotSc_CoverMode::eOnWithNoImage;
	aJob.backCoverRunLength = 1;


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;


	create object instance aFrontCover of V_CV;
	aFrontCover.outputSize = "FRONTCOVER_TEST_SIZE";
	aFrontCover.inputTray = "IOTSHT_INTRAY_FRONT_COVER";
	aFrontCover.direction = "IOTSHT_MEDIUM_DIRECTION_SEF";
	aFrontCover.paperType = "IOTSHT_MEDIUM_TYPE_FRONT_COVER";
	aFrontCover.paperType = "IOTSHT_TRAY_SWITCH_BY_SYSTEM";
	aFrontCover.paperColorType = "0";
	aFrontCover.paperPrePunched = "0";
	aFrontCover.isFront = TRUE;
	

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	aSec.fixedFlag = IotSc_FixType::eUncompleteFixed;	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


end if;


',
	1,
	'',
	"2920f4db-f211-47ba-adbb-5a3396b6583d");
INSERT INTO O_TFR
	VALUES ("ee30ce4b-42ad-433b-9ffd-f7e879810132",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'firstPagePrintDebug',
	'::setJobAttribute(
	jobID : param.jobID,
	dataFormat : IotSc_DataFormat::eNull,
	staple : "IOT_STAPLE_OFF",
	nSetTray : "IOTSHT_INPUT_TRAY_1",
	collateMode : collateMode,
	colorMode : "IOTSHT_COLOR_TYPE_MIX",
	internalOffset : aParamInfo.jobOffsetMode,
	outputTray : outtray,
	runLength : runLength,
	forcedDuplex : "IOT_FORCED_DUPLEX_OFF",
	interleafMode : IotSc_InterleafMode::eOff,
	nSetMediumType : "IOTSHT_MEDIUM_TYPE_TEST",
	interleafTray : "IOTSHT_INPUT_TRAY_SMH",
	interleafMediumType : "IOTSHT_MEDIUM_TYPE_THIN",
	nSet : IotSc_NSetMode::eOff,
	isProof : FALSE,
	smhConfirm : "IOT_SMH_CONFIRM_OFF",
	tonerSave : "IOTSHT_TONER_SAVE_OFF",
	originalOrder : "IOTFINL_ORIGINAL_ORDER_1TON_NORMAL",
	punchMode : "IOT_PUNCH_OFF",
	foldMode : "IOT_FOLD_OFF",
	foldBindMode : IotSc_FoldBindMode::eNull ,
	foldSide : IotSc_FoldSide::eInside ,
	foldBindNum : 0 ,
	foldBindTotalNum : 10,
	frontCoverMode : IotSc_CoverMode::eOff,
	frontCoverTray : "IOTSHT_INTRAY_SMH",
	frontCoverMediumType : "TESTTEST",
	frontCoverRunLength : 2,
	backCoverMode : IotSc_CoverMode::eOnWithImageOnlySurfaceDuplex,
	backCoverTray : "IOTSHT_INPUT_TRAY_BACK",
	backCoverMediumType : "IOTSHT_BACK_COVER",
	backCoverRunLength : 0,
	bookletMode : IotSc_BookletMode::eOff,
	bookletDevideMode : IotSc_BookletDevideMode::eOff,
	bookletDevideNum : 20,
	exitFace : "IOTSHT_EXIT_FACE_UP" ,
	imageErase : IotSc_ImageEraseMode::eNull ,
	interleafSize : "IOTSHT_MEDIUM_SIZE_A4",
	interleafDirection : "IOTSHT_MEDIUM_DIRECTION_LEF",
	pageAnnotationMode :  IotSc_PageAnnotationMode::eWithDenominatorAuto,
	pageCondition : IotSc_AnnotationCondition::eAll,
	startPageOffset : 0,
	startPageNo : 0,
	endPageNo : 0,
	totalPageNo : 0,
	dateAnnotationMode : IotSc_DateAnnotationMode::eOff,
	dateCondition :  IotSc_AnnotationCondition::eAll,
	stampAnnotationMode : IotSc_StampAnnotationMode::eOff,
	stampCondition : IotSc_AnnotationCondition::eAll,
	stampColor : "IOT_IMAGE_COLOR_R",
	waterMarkMode : IotSc_WaterMarkMode::eOff,
	waterMarkColor : "IOT_IMAGE_COLOR_Y",
	copiesNumPrintMode : IotSc_CopiesNumPrintMode::eOff,
	formColor : "0" ,
	formType : IotSc_FormType::eImageOverlay,
	pageCopies : 1,
	mixPunchMode : IotSc_MixPunchMode::eOnlySameSizeOf1stSheet,
	isIncludeMixSizePaper : FALSE,
	isIncludeInvertProhibitedPaper : FALSE,
	signatureMode : aParamInfo.signature,
	copiesNumStartOffset : 1,
	isMergeImageFixedDirection : FALSE,
	typeMismatchAction : "IOT_TYPE_MISMATCH_ACTION_CHANGE_WITH_INTERACT"
	, isPaperColorAttrEnable : TRUE ,
	 frontCoverPaperColorType : "0",
	 frontCoverPaperPrePunched : "0",
	 backCoverPaperColorType :  "0",
	 backCoverPaperPrePunched : "0"
	,indicatedDuplexDirection : IotSc_DuplexDirection::eLeftRight,
	isFirstPagePrint : TRUE

 );',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'
if (  self.testCase == 300 )
	// 小冊子

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;
elif (  self.testCase == 301 )
	// 小冊子

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目(白紙）
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.blankPage = "IOTSHT_BLANK_PAGE_ON";
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.isFirstValidPage = TRUE;
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;


end if;',
	1,
	'',
	"3ae64f33-3b55-49e9-844e-59dfe3075fb6");
INSERT INTO O_TFR
	VALUES ("18b91bf4-9d9a-416d-ba4e-c7c85ae7f089",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'clusterDebug',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if (  self.testCase == 400 )
	// 片面 1ページ

	docID = 1101;
	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperType = "0";
	aSec.ats = "0";
	aSec.inputTray = "IOTSHT_INPUT_TRAY_AUTO";
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_CLUSTER";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;
end if;
',
	1,
	'',
	"f424a61d-db79-477e-b42b-1a896f61fdb0");
INSERT INTO O_TFR
	VALUES ("655292bd-66bd-4526-b102-d0bcd7184595",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'normalJob',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 1001 )
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1002 )
	// 両面２ページ
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1003)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1004 )
	//片面２ページ
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1005 )
	// 1ページ、2Job


	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	// 1Job目
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 2Job目
	jobID = 2;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif ( self.testCase == 1006)
	// uncollate 2ページ, 10部

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 10;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション２ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1010 )
	// システムデータの設定
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	 aJob.jobType = "IOT_JOB_TYPE_DIRECT_COPY";
	aJob.collateMode = "IOT_COLLATE_OFF";



elif ( self.testCase == 1011 )
	//片面3ページ x 2部
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1040 )
	// 2ページもの
	
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 1;
	aJob.isFirstPagePrint = TRUE;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";

elif ( self.testCase == 1050 )
	// 2Page x 3 Set Offset Collate
	
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 3;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";

elif ( self.testCase == 1051 )
	// 1ページ5部 uncollate, 1枚目で位置指定サンプル
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.spotCheckPosition1 = 1;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1052 )
	// 1ページ
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif ( self.testCase == 1053 )
	// 1ページ
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1054 )
	// 2Sec 2ページ, 両面
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.outtray = "IOTSHT_OUTTRAY_SIDE";
	aJob.collateMode = "IOT_COLLATE_ON";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 1055 )
	// 2Sec 1ページ
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";

      rdocID = V_RDOC::createInstance( jobID :jobID );

      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );

      // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
end if;
',
	1,
	'',
	"ab1f1013-e5c4-469b-a5c4-bb73def114b4");
INSERT INTO O_TFR
	VALUES ("90035390-0461-4c10-a8c5-a1e0b8177dbc",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'signatureTest',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 2001 )
	// AR68899の再現

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
	aJob.exitFace = "0";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 3;
	aJob.frontCoverMode = IotSc_CoverMode::eOnWithNoImage;		
	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
	aJob.frontCoverMediumType = "TESTTEST";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション6ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション7ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション8ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション9ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション10ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション11ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション12ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション13ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション14ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション15ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif ( self.testCase == 2002 )
	// AR68899の再現

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
	aJob.exitFace = "0";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 3;
	aJob.frontCoverMode = IotSc_CoverMode::eOnWithNoImage;		
	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
	aJob.frontCoverMediumType = "TESTTEST";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif ( self.testCase == 2010 )
	// Uncollateだとどうなるか？

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
//	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
	aJob.foldMode = "IOT_FOLD_BI_FOLD";
	aJob.foldBindMode = IotSc_FoldBindMode::eNeedCount;
	aJob.exitFace = "0";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 3;
//	aJob.frontCoverMode = IotSc_CoverMode::eOnWithNoImage;		
//	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
//	aJob.frontCoverMediumType = "TESTTEST";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );  
              select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF"; 
               // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
//	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.pageCopies=5;
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.pageCopies=4;
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";



elif ( self.testCase == 2011 )

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
	aJob.exitFace = "0";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 1;
	aJob.frontCoverMode = IotSc_CoverMode::eOnWithImageNormal;		
	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
	aJob.frontCoverMediumType = "TESTTEST";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション6ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション7ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション8ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション9ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション10ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 2012 )


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.signatureMode = IotSc_SignatureMode::eRightBind;
	aJob.exitFace = "0";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 1;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;

	i = 0;
	while ( i < 17 )
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i + 1;
	end while;


elif ( self.testCase == 2013 )
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.isDivideSetOffsetSupport = TRUE;
	aSysData.saddleStapleNum = 15;

	create object instance aConfig of V_CFG;
	aConfig.setDefaultValue();
	aConfig.sbFinConfig = TRUE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 1;
	aJob.originalOrder = "IOTFINL_ORIGINAL_ORDER_1TON_FAST_OUTPUT";
	aJob.foldMode = "IOT_FOLD_BI_FOLD";
	aJob.staple = "IOT_STAPLE_SADDLE";
	aJob.outtray = "IOTSHT_OUTTRAY_FIN1";

	aJob.foldBindMode = IotSc_FoldBindMode::eNull;
	aJob.foldBindNum = 0;
	aJob.foldBindTotalNum = 0;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	
		// 第2セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif ( self.testCase == 2014 )
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.isDivideSetOffsetSupport = TRUE;
	aSysData.saddleStapleNum = 15;

	create object instance aConfig of V_CFG;
	aConfig.setDefaultValue();
	aConfig.sbFinConfig = TRUE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 1;
	aJob.originalOrder = "IOTFINL_ORIGINAL_ORDER_1TON_FAST_OUTPUT";
	aJob.foldMode = "IOT_FOLD_BI_FOLD";
	aJob.staple = "IOT_STAPLE_SADDLE";
	aJob.outtray = "IOTSHT_OUTTRAY_FIN1";

	aJob.foldBindMode = IotSc_FoldBindMode::eNull;
	aJob.foldBindNum = 0;
	aJob.foldBindTotalNum = 0;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	
		// 第1セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 2015 )
	isLastDevideSet = FALSE;
	endSheetNo = S_SHTP::getDevideSheetNo(
                                totalFaceNum : 4,
                                devideSheetNum : 15,
                                devidedNo : 1,
                                mode : IotSc_FoldBindMode::eByNum,
                                isStartSheet : FALSE,
                                plex :"IOTSHT_PLEX_DUPLEX" ,
                                isInvertOrder : TRUE,
                                r_isLastDevideSet : isLastDevideSet ) ;
end if;
',
	1,
	'',
	"6cad703c-242d-4642-b952-05250a04f666");
INSERT INTO O_TFR
	VALUES ("33e170ca-ed54-4c2c-a2e3-6d8160f36ad6",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'ohpInserterJob',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 3001 )
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.interleafMode = IotSc_InterleafMode::eOnWithImage;
	aJob.exitFace = "IOT_EXIT_FACE_DOWN";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif ( self.testCase == 3002 )
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;
	aJob.exitFace = "IOT_EXIT_FACE_DOWN";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
end if;			
',
	1,
	'',
	"abffb218-b35c-4312-9974-78417628c27a");
INSERT INTO O_TFR
	VALUES ("1c02ef84-0bb2-4edd-ada7-8b3f8c413725",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'paperColorAttr',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 3501 )
	// SC9822:APS、表面がBlankPageの両面プリントで用紙属性に応じたトレイ選択ルール追加
	// 表面Blank/裏面BW
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_APS";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.blankPage = "IOTSHT_BLANK_PAGE_ON";
		aPage.inputColorMode = IotSc_InputColorMode::eNull;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_APS";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.inputColorMode = IotSc_InputColorMode::eBW;
elif ( self.testCase == 3502 )
	// SC9822:APS、表面がBlankPageの両面プリントで用紙属性に応じたトレイ選択ルール追加
	// 表面Blank/裏面Color
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_APS";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.blankPage = "IOTSHT_BLANK_PAGE_ON";
		aPage.inputColorMode = IotSc_InputColorMode::eNull;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_APS";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.inputColorMode = IotSc_InputColorMode::eColor;

end if;
',
	1,
	'',
	"6d0d674e-53a2-4f01-a2ae-b903b432a22f");
INSERT INTO O_TFR
	VALUES ("75ae92e0-bcac-4b9c-9c4d-46abde6ed4d9",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'hddFullTest',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 4001 )
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
end if;',
	1,
	'',
	"88eb7050-14f8-447f-aaca-03fb587ceafd");
INSERT INTO O_TFR
	VALUES ("abffb218-b35c-4312-9974-78417628c27a",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'offset',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 5001)
	// uncollate 1ページ, 10部, offset部数 4

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 10;

elif ( self.testCase == 5002)
	// uncollate 1ページ, 10部, offset部数 4, FaceUp

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP_REVERSE";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 10;

elif ( self.testCase == 5003)
	// Start Banner付き
	// ポイント: Start Bannerあとの最初のセットはCONT
	// uncollate 1ページ, 10部, offset部数 4, FaceUp

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP_REVERSE";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 10;


elif ( self.testCase == 5004)
	// Start Banner付き
	// uncollate 1ページ, 5部, offset部数 2, FaceDown
	// ポイント: Offset部数が部数より少ないときはUncollateOffsetモードで動作しない

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 2;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 5;

elif ( self.testCase == 5005)

	// uncollate 1ページ, 6部, offset部数 2, Face Down
	// ポイント: 特になし

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 2;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 6;


elif ( self.testCase == 5006)

	// uncollate 1ページ, 3部, offset部数 3, Face Down
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 3;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 3;


elif ( self.testCase == 5007)
	// uncollate 2ページ,  2部,  Face UP, OHP合紙
	// ポイント:  OffsetがNewになる, 部数は1

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 0;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;
	aJob.interleafSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.interleafDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

elif ( self.testCase == 5008)
	// uncollate 1ページ,  5部, offset部数 3, Face Down, OHP合紙
	// ポイント:  OffsetがNewになる, 部数は1
	// Kutaiタイプでテスト

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 3;

	select any aInit from instances of V_INIT;
	aInit.product = IotSc_ProductName::kutaniMF;
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;
	aJob.interleafSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.interleafDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 5;


elif ( self.testCase == 5009)
	// uncollate 1ページ,  6部, offset部数 3, Face Down(余り部数が0)
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 3;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 6;


elif ( self.testCase == 5010)
	// uncollate 1ページ,  6部, offset部数 3, Face Up(余り部数が0)
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 3;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 6;


elif ( self.testCase == 5011)
	// Start Banner付き
	// ポイント: Start Bannerあとの最初のセットはCONT,
	//                 : 2ページ目の最初はNEW
	// uncollate 2ページ, 5部, offset部数 2, FaceDown

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 2;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 5;

		// 第１セクション２ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 5;


elif ( self.testCase == 5012)
	// Start Banner付き
	// ポイント: Start Bannerあとの最初のセットはCONT,
	//                 : 2ページ目の最初はNEW
	// uncollate 2ページ, 5部, offset部数 2, FaceUp

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 2;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 5;

		// 第１セクション２ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 5;





elif ( self.testCase == 5013)
	//  uncollate 1ページ,  6部, offset部数 4, Face Down, ウオーターマーク(連番)
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 6;


elif ( self.testCase == 5014)
	//  uncollate 1ページ,  6部,  Face Down, ウオーターマーク(連番)
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 0;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 6;


elif ( self.testCase == 5015)
	//  uncollate 2ページ,  2部,  Face Down, ウオーターマーク(連番) + バナー
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 0;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

elif ( self.testCase == 5016)
	//  uncollate 2ページ,  1部,  Face Down, ウオーターマーク(連番) + バナー+OHP合紙
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 0;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;


elif ( self.testCase == 5017)
	//  Collate 2ページ,  3部,  Face Down, ウオーターマーク(連番)
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 0;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.runLength = 3;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies=0;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies=0;

elif ( self.testCase == 5018)
	//  Collate 2ページ,  3部,  Face Down, ウオーターマーク(連番) + スタートバナー
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 0;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.runLength = 3;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies=0;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies=0;


elif ( self.testCase == 5019)
	//  Collate 2ページ,  3部,  Face Down, ウオーターマーク(連番) + スタートバナー+OHP合紙
	// ポイント:  OffsetがNewになる

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.uncollateOffsetNum = 0;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.runLength = 3;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies=0;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies=0;


elif ( self.testCase == 5020 )
	// 2Page x 4 Set Collate JobOffset
	// 位置指定サンプル 1, 3部目
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Job;
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 4;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 3;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";


elif ( self.testCase == 5021 )
	// 2Page x 4 Set Uncollate JobOffset
	// 位置指定サンプル 1, 3, 5枚目

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Job;
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 1;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 3;
	aJob.spotCheckPosition3 = 5;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode = "IOT_COLLATE_OFF";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOn_Job;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.pageCopies=4;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.pageCopies=4;


elif ( self.testCase == 5022 )
	// 分冊オフセット(7枚, 3枚分冊)
	pageNum = 7;

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.isDivideSetOffsetSupport = TRUE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 3;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.foldBindMode = IotSc_FoldBindMode::eByNum;
	aJob.foldBindNum = 4;
	aJob.foldBindTotalNum = pageNum;
	aJob.foldMode =  "IOT_FOLD_BI_FOLD";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";

	n = 0;
	while ( n < pageNum )
		// 第１セクションnページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		n = n + 1;
	end while;
end if;
',
	1,
	'',
	"8ba97091-61b8-4cbe-9a66-550ff898e96a");
INSERT INTO O_TFR
	VALUES ("f424a61d-db79-477e-b42b-1a896f61fdb0",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'blackSpeedPromote',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 5500)
	// BlackSpeed Promote On, 本文白黒, _BWがでればOK
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.outputColorMode = "IOTSHT_COLOR_TYPE_MIX";
	aJob.isBlackSpeedPromoteOn = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;
		aPage.color = "IOTSHT_COLOR_TYPE_BW";

elif ( self.testCase == 5501)
	// BlackSpeed Promote OFF, 本文白黒, _MIX_BWがでればOK
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.outputColorMode = "IOTSHT_COLOR_TYPE_MIX";
	aJob.isBlackSpeedPromoteOn = FALSE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;
		aPage.color = "IOTSHT_COLOR_TYPE_BW";

elif ( self.testCase == 5502)
	// BlackSpeed Promote On, 本文合紙(本文白黒, 合紙),
	// 本文 _BW, 合紙 _WHITE がでればOK

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;
	aJob.exitFace = "IOT_EXIT_FACE_DOWN";

	aJob.outputColorMode = "IOTSHT_COLOR_TYPE_MIX";
	aJob.isBlackSpeedPromoteOn = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.color = "IOTSHT_COLOR_TYPE_BW";


elif ( self.testCase == 5503)
	// BlackSpeed Promote Off, 本文合紙(本文白黒, 合紙),
	// 本文 _MIX_BW, 合紙 _MIX_WHITE がでればOK

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;
	aJob.exitFace = "IOT_EXIT_FACE_DOWN";

	aJob.outputColorMode = "IOTSHT_COLOR_TYPE_MIX";
	aJob.isBlackSpeedPromoteOn = FALSE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.color = "IOTSHT_COLOR_TYPE_BW";

elif ( self.testCase == 5504)
	// BlackSpeed Promote On, 本文合紙(本文カラー, 合紙),
	// 本文 _MIX, 合紙 _WHITE がでればOK

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;
	aJob.exitFace = "IOT_EXIT_FACE_DOWN";

	aJob.outputColorMode = "IOTSHT_COLOR_TYPE_MIX";
	aJob.isBlackSpeedPromoteOn = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.color = "IOTSHT_COLOR_TYPE_MIX";

elif ( self.testCase == 5505)
	// BlackSpeed Promote Off, 本文合紙(本文カラー, 合紙),
	// 本文 _MIX, 合紙 _MIX_WHITE がでればOK

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;
	aJob.exitFace = "IOT_EXIT_FACE_DOWN";

	aJob.outputColorMode = "IOTSHT_COLOR_TYPE_MIX";
	aJob.isBlackSpeedPromoteOn = FALSE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.color = "IOTSHT_COLOR_TYPE_MIX";

end if;
',
	1,
	'',
	"d4cb64e1-741e-4000-983a-a8b4c84a154b");
INSERT INTO O_TFR
	VALUES ("ef2593ec-6657-4858-938f-cf4aa8ac26ba",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'copiesNumPrint',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 5600 )
	// uncollate 2ページ,  3部,  文書管理
	// Uncollateバラシの先頭セットで、Offset Newが通知される

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	pageCopies = 3;

		// 第１セクション 1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

		// 第１セクション 2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

elif ( self.testCase == 5601 )
	// uncollate 2ページ,  1部,  文書管理
	// 先頭セット以外はCont

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	pageCopies = 1;

		// 第１セクション 1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

		// 第１セクション 2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;


elif ( self.testCase == 5602 )
	// uncollate 1ページ,  1部,  文書管理, OHP合紙, FD
	// 本文(OHP)はNew, 合紙はCont

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithImage;
	aJob.exitFace = "IOT_EXIT_FACE_DOWN";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	pageCopies = 1;

		// 第１セクション 1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

elif ( self.testCase == 5603 )
	// uncollate 3ページ,  1部,  文書管理, OHP合紙, FD
	// 先頭の本文(OHP)はNew, 残りのセットはすべてCont

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithImage;
	aJob.exitFace = "IOT_EXIT_FACE_DOWN";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	pageCopies = 1;

		// 第１セクション 1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

		// 第１セクション 2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

		// 第１セクション 3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

elif ( self.testCase == 5604 )
	// uncollate 1ページ,  1部,  文書管理, OHP合紙, FU
	// 本文(OHP)はCont, 合紙はNew
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithImage;
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	pageCopies = 1;

		// 第１セクション 1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

elif ( self.testCase == 5605 )
	// uncollate 2ページ,  3部,  文書管理, スタートバナー
	// StartバナーはNew, Startバナー直後のSetはCont, その他の先頭ページのセットはNew

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	pageCopies = 3;

		// 第１セクション 1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

		// 第１セクション 2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

elif ( self.testCase == 5606 )
	// uncollate 2ページ,  1部,  文書管理, スタートバナー
	// StartバナーはNew, その他のセットはすべてCont


	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	pageCopies = 1;

		// 第１セクション 1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

		// 第１セクション 2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

elif ( self.testCase == 5607 )
	// uncollate 2ページ,  1部,  文書管理, OHP合紙, FU, Startバナー
	// 本文(OHP)はCont, 合紙はNew
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 2;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithImage;
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	pageCopies = 1;

		// 第１セクション 1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

		// 第１セクション 2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= pageCopies;

end if;
',
	1,
	'',
	"b1bf1e2a-9309-4971-a833-d02c33e176ef");
INSERT INTO O_TFR
	VALUES ("6cad703c-242d-4642-b952-05250a04f666",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'separatorUncollate',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 5701)
	//本文 tray1, uncollate 1ページ,  2部, セパレータ：tray2

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isSeparatorSheetJob = True;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

elif ( self.testCase == 5702)
	//本文 tray1, uncollate 2ページ,  2部, セパレータ：tray2

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isSeparatorSheetJob = True;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

elif ( self.testCase == 5703)
	// 本文 tray1, uncollate 2ページ,  2部, セパレータ：tray2
	// FaceUP

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isSeparatorSheetJob = True;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

elif ( self.testCase == 5704 )
	// 本文 tray1, uncollate 1ページ,  1部, セパレータ：tray2, OHP合紙
	// FaceUP

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isSeparatorSheetJob = True;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

elif ( self.testCase == 5705)
	// 本文 tray1, uncollate 2ページ,  2部, セパレータ：tray2
	// FaceUP

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isSeparatorSheetJob = True;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 3;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 3;

elif ( self.testCase == 5706)
	// 本文 tray1, uncollate 2ページ,  2部, セパレータ：tray2
	// FaceUP

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isSeparatorSheetJob = false;
//	aJob.separatorTray = "IOTSHT_INTRAY_2";
//	aJob.separatorMediumType = "IOTSHT_MEDIUM_SIZE_A4";
//	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 3;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 3;


elif ( self.testCase == 5707)
	// 本文 tray1, uncollate 2ページ,  3部 (普通のアンコレート)
	// FaceDown

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isSeparatorSheetJob = false;
//	aJob.separatorTray = "IOTSHT_INTRAY_2";
//	aJob.separatorMediumType = "IOTSHT_MEDIUM_SIZE_A4";
//	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
//	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 3;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 3;
end if;
',
	1,
	'',
	"5efeea7f-76a0-43c4-a0fd-1de7310d4b05");
INSERT INTO O_TFR
	VALUES ("7b78b5a9-d4c8-4c25-a51f-19fd4292e815",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'banner',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 5801)
	// End Banner 1ページ

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP_REVERSE";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.bannerMode = IotSc_BannerMode::eEndBannerOnly;
               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

elif ( self.testCase == 5802 )
	// バナーATS

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.isBannerAtsSupport = 1;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP_REVERSE";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.bannerMode = IotSc_BannerMode::eStartAndEndBanner;
               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;
end if;
',
	1,
	'',
	"2c6fa83f-5592-4b11-bf5b-aef4635252ff");
INSERT INTO O_TFR
	VALUES ("0a0f3032-d6d9-4cc8-86fb-956534fbdadb",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'waterMark_annotation',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// UUID / Hybrid Water Mark追加によるテスト
// このケースでは、シート作成後ImageRequestをすること。


if ( self.testCase == 5900 )
	// 通常Hybrid Water Mark
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 1;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif ( self.testCase == 5901 )
	// 通常Hybrid Water Mark
	// 2ページもので、サイズが異なるときに２面作られるか	

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 99;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_2";
		aPage.outputSize = "IOTSHT_MEDIUM_SIZE_A3";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif ( self.testCase == 5902 )
	// 通常Hybrid Water Mark
	// 2ページもので、サイズが同じときに使いまわすか	

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 99;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif ( self.testCase == 5903 )
	// 通常Hybrid Water Mark
	// 2ページもので、2ページ目がデジタルコード付き	

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 99;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = TRUE;

elif ( self.testCase == 5910 )
	// UUID

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.isUUIDPrint = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif ( self.testCase == 5911 )
	// UUID ２ページ目向きが違っても同じイメージを使う

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.isUUIDPrint = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eM_SS;
elif ( self.testCase == 5912 )
	// UUID ２ページ両面、表裏で画像方向が異なる
	// A4LEFでPort、上下綴じ
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.isUUIDPrint = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.duplexDirection = IotSc_DuplexDirection::eTopBottom;
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.imageDirection = IotSc_ImageDirection::eM_FS;
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 5920 )
	// UUID + Hybrid + Page 組み合わせ

	//さらに１ページ目と２ページ目は両面であり、ポート・ランドが異なる
	// UUID/Pageは１ページ目にあわせてM_FS,P_FSとなるが
	// Water Markはイメージの向きにあう（M_SS)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.isUUIDPrint = TRUE;
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 20;
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eWithDenominatorAuto;	

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.duplexDirection = IotSc_DuplexDirection::eTopBottom;
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.imageDirection = IotSc_ImageDirection::eM_FS;
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.imageDirection = IotSc_ImageDirection::eM_SS;

elif ( self.testCase == 5930 )
	// UUID + Hybrid + Printer Trust Mark 組み合わせ1

	// Printer Trust MarkはK

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.isUUIDPrint = TRUE;
//	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
//	aJob.waterMarkCharacter = 20;
	aJob.formType = IotSc_FormType::ePrinterTrustMark;
	aJob.formColor = "IOT_IMAGE_COLOR_K";	

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.imageDirection = IotSc_ImageDirection::eM_FS;
		aPage.paperType = "0";
		aPage.mergeSequenceNo = 5;
		
elif ( self.testCase == 5931 )
	// UUID PLWでの設定
	//　長編綴じ SEFのランドスケープ画像の際、上下綴じとして扱われるか？

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.isUUIDPrint = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	aSec.duplexDirection = IotSc_DuplexDirection::eLeftRight; // PLWでは長辺綴じの意味
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;
		aPage.paperType = "0";
		aPage.isDuplexDirFollowImg = FALSE;  // PLW/PCL

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.imageDirection = IotSc_ImageDirection::eM_FS;
		aPage.paperType = "0";
		aPage.isDuplexDirFollowImg = FALSE;  // PLW/PCL
elif ( self.testCase == 5932 )
	// 5931 の２次不具合ないか確認。isDuplexDirFollowImg = TRUEにする(defaultがTRUE）

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.isUUIDPrint = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	aSec.duplexDirection = IotSc_DuplexDirection::eLeftRight; // PLWでは長辺綴じの意味
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.imageDirection = IotSc_ImageDirection::eP_FS;
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.imageDirection = IotSc_ImageDirection::eM_FS;
		aPage.paperType = "0";



//  Test Case 5940-5943  
//  修正番号286の確認テスト(AR76049)
//  両面時に片面だけデジタルコードがあるケースの確認
// 5940 : 表面デジタルコードあり、裏面なしの両面
// 5941 : 5940の逆
// 5942 : 小冊子でイメージ1にあり
// 5943 : 小冊子でイメージ2にあり

elif ( self.testCase == 5940 )
	// 2005.10.19 by y.toi 
	// AR 76049のテスト(5940-5942)
	// 通常Hybrid Water Mark
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 1;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = TRUE;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = FALSE;
elif ( self.testCase == 5941 )
	// 2005.10.19 by y.toi 
	// AR 76049のテスト(5940-5942)
	// 通常Hybrid Water Mark
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 1;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = FALSE;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = TRUE;

elif ( self.testCase == 5942 )
	// 2005.10.19 by y.toi 
	// AR 76049のテスト(5940-5942)
	// 通常Hybrid Water Mark
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 1;
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = FALSE;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = TRUE;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = FALSE;

elif ( self.testCase == 5943 )
	// 2005.10.19 by y.toi 
	// AR 76049のテスト(5940-5942)
	// 通常Hybrid Water Mark
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 1;
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = FALSE;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = FALSE;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.isDigitalCodePrinted = TRUE;



end if;',
	1,
	'',
	"efe31a8f-5ba9-4278-8bed-9ecf412d8e4f");
INSERT INTO O_TFR
	VALUES ("8ba97091-61b8-4cbe-9a66-550ff898e96a",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'officialStamp',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 6001)
	//本文 tray1, Face Up, uncollate 3ページ,  2部, Stamp1

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
//	aJob.isUncollateSeparatorSheetJob = True;
//	aJob.separatorTray = "IOTSHT_INTRAY_2";
//	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
//	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
//	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.officialStampSelect = "IOTSHT_OFFICIAL_STAMP_1";
	aJob.officialStampShift = 100;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

elif ( self.testCase == 6002)
	//本文 tray1, Face Down, uncollate 3ページ,  2部, Stamp1

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
//	aJob.isUncollateSeparatorSheetJob = True;
//	aJob.separatorTray = "IOTSHT_INTRAY_2";
//	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
//	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
//	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.officialStampSelect = "IOTSHT_OFFICIAL_STAMP_1";
	aJob.officialStampShift = 100;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

elif ( self.testCase == 6003)
	//本文 tray1, Face Up, Collate 3ページ,  2部, Stamp1

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
//	aJob.isUncollateSeparatorSheetJob = True;
//	aJob.separatorTray = "IOTSHT_INTRAY_2";
//	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
//	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
//	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.officialStampSelect = "IOTSHT_OFFICIAL_STAMP_1";
	aJob.officialStampShift = 100;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6004)
	//本文 tray1, Face Down, uncollate 3ページ,  2部, Stamp1

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
//	aJob.isUncollateSeparatorSheetJob = True;
//	aJob.separatorTray = "IOTSHT_INTRAY_2";
//	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
//	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
//	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aJob.officialStampSelect = "IOTSHT_OFFICIAL_STAMP_1";
	aJob.officialStampShift = 100;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

end if;

',
	1,
	'',
	"655292bd-66bd-4526-b102-d0bcd7184595");
INSERT INTO O_TFR
	VALUES ("efe31a8f-5ba9-4278-8bed-9ecf412d8e4f",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'waitNextSheetReq',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 6101 )
	// SheetMax=5, 6ページジョブ
	// 6ページ目のSheetInfoを通知しない
	// Sheet End を出したあとに、6ページ目のSheetInfoが出る

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;
	select any aMV from instances of V_MV;
	aMV.sheetLibMax = 5;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
//	aJob.isUncollateSeparatorSheetJob = True;
//	aJob.separatorTray = "IOTSHT_INTRAY_2";
//	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
//	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
//	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション6ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

elif ( self.testCase == 6102 )
	// アンコレートバラシ 6部(ウオーターマーク(連番))
	// 6枚目のSheetInfoを通知しない
	// Sheet End を出したあとに、6枚目のSheetInfoが出る

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;
	select any aMV from instances of V_MV;
	aMV.sheetLibMax = 5;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
//	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
//	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies = 6;

elif ( self.testCase == 6103 )
// Start Banner + 5ページ
	// 6枚目のSheetInfoを通知しない
	// Sheet End を出したあとに、6枚目のSheetInfoが出る

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;
	select any aMV from instances of V_MV;
	aMV.sheetLibMax = 5;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
//	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
//	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies = 1;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

elif ( self.testCase == 6104 )
// End Banner + 5ページ
	// 6枚目のSheetInfoを通知しない
	// Sheet End を出したあとに、6枚目のSheetInfoが出る

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;
	select any aMV from instances of V_MV;
	aMV.sheetLibMax = 5;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
//	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.bannerMode = IotSc_BannerMode::eEndBannerOnly;
//	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies = 1;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

elif ( self.testCase == 6105 )
// OHP合紙 Face Down

	// 6枚目のSheetInfoを通知しない
	// Sheet End を出したあとに、6枚目のSheetInfoが出る

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;
	select any aMV from instances of V_MV;
	aMV.sheetLibMax = 5;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
//	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
//	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies = 1;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

elif ( self.testCase == 6106 )
// OHP合紙 Face Up

	// 6枚目のSheetInfoを通知しない
	// Sheet End を出したあとに、6枚目のSheetInfoが出る

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
//	aSysData.uncollateOffsetNum = 4;
	select any aMV from instances of V_MV;
	aMV.sheetLibMax = 5;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
//	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
//	aJob.bannerMode = IotSc_BannerMode::eStartBannerOnly;
	aJob.interleafMode = IotSc_InterleafMode::eOnWithNoImage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies = 1;

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

end if;
',
	1,
	'',
	"b9a5be9f-22f2-401e-98b7-4b69b5fb2930");
INSERT INTO O_TFR
	VALUES ("28ea6e93-f4e5-4ba5-a4fb-88b9e5bc7887",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'stapleJob',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 6201 )
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;
	aJob.staple = "PFV_STAPLE_CENTER_TAIL_DUAL";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6202 )
	//  中綴じ、片面ジョブ 3P x 2部

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;
	aJob.staple = "IOT_STAPLE_SADDLE";
	aJob.foldMode = "IOT_FOLD_BI_FOLD";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6203 )
	//  中綴じ、両面ジョブ 3P x 2部

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;
	aJob.staple = "IOT_STAPLE_SADDLE";
	aJob.foldMode = "IOT_FOLD_BI_FOLD";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6205 )
	// Uncollate Staple
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	select any aConfig from instances of V_CFG;
	aConfig.uncollateStapleSupport = 1;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";
//	aJob.staple = "PFV_STAPLE_CENTER_TAIL_DUAL";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 0;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";
	aDoc.staple = "PFV_STAPLE_CENTER_TAIL_DUAL";

	// 第1セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
//	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
//	aSec.outputSize =  "IOTSHT_MEDIUM_SIZE_A4";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		aPage.outputSize =  "IOTSHT_MEDIUM_SIZE_A4";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		aPage.outputSize =  "IOTSHT_MEDIUM_SIZE_NG_STAPLE";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		aPage.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		aPage.outputSize =  "IOTSHT_MEDIUM_SIZE_A4";

end if;
',
	1,
	'',
	"90035390-0461-4c10-a8c5-a1e0b8177dbc");
INSERT INTO O_TFR
	VALUES ("b9a5be9f-22f2-401e-98b7-4b69b5fb2930",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'trouble',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'tc = self.testCase;

if ( tc == 30001 )
	// AR75998 小冊子出力時に割り込みコピーを行うと、割り込み解除後の出力結果がおかしい
	// 再現方法: １部出したところで割り込ませる。再開後FOLDの指定が
	// OFFになっていると不具合
	// システムデータの設定
	
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_OF";
	aJob.runLength = 0;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode = "IOT_COLLATE_ON";
 	aDoc.staple = "IOT_STAPLE_SADDLE";
	aDoc.foldBindMode = IotSc_FoldBindMode::eOff;
	aDoc.foldBindNum = 2004;
	aDoc.runLength = 2;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

end if;
',
	1,
	'',
	"fe6bd9f9-54ed-477a-8075-9328a1df7e0b");
INSERT INTO O_TFR
	VALUES ("ab1f1013-e5c4-469b-a5c4-bb73def114b4",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'multiDocuments',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 6301)
	// AR78432 <FC>プリント出力時、フィニッシャにてジョブ単位で出力されない
	// の再現＆対策効果確認テスト
	// ポイント:ジョブ単位でOffsetされること

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn;
	// 第１ファイル

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOff;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

	// 第２ファイル
               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOff;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

elif ( self.testCase == 6302)
	// AR78432 <FC>プリント出力時、フィニッシャにてジョブ単位で出力されない
	// の再現＆対策効果確認テスト2
	// ポイント: ジョブ単位でOffsetされること
	//** 複数部の場合でもうまくいくことを確認する***
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn;
	// 第１ファイル

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOff;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 2;

	// 第２ファイル
               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOff;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 3;
elif ( self.testCase == 6303)
	// AR78432 <FC>プリント出力時、フィニッシャにてジョブ単位で出力されない
	// の再現＆対策効果確認テスト3
	// ポイント:ジョブ単位でOffsetされること
	// Job=Uncollate / Doc = Collateの時のJob Offset

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn;
	// 第１ファイル

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOff;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

	// 第２ファイル
               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOff;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

elif ( self.testCase == 6304)
	// AR78432 <FC>プリント出力時、フィニッシャにてジョブ単位で出力されない
	// の再現＆対策効果確認テスト3
	// Uncollate でfileが２つ。各１ページずつで１部。セット単位オフセット指定
	// ポイント:セット単位指定だが、1部なので結局ジョブオフセットになる状況

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Set;
	// 第１ファイル

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOff;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;

	// 第２ファイル
               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";
	aDoc.internalOffsetMode = IotSc_OffsetMode::eOff;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 1;
end if;',
	1,
	'',
	"75ae92e0-bcac-4b9c-9c4d-46abde6ed4d9");
INSERT INTO O_TFR
	VALUES ("d4cb64e1-741e-4000-983a-a8b4c84a154b",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'batesNo',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'tc = self.testCase;
if ( tc == 6400 )
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.isBatesPrint = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( tc == 6401 )
	// 2ページ目, 3ページ目にBatesに打つ(4ページもの)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.isBatesPrint = TRUE;
	aJob.batesStartNo = 2;
	aJob.batesEndNo = 3;


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( tc == 6402 )
	// 2ページ目, 3ページ目でジョブアボート
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.isBatesPrint = TRUE;
	aJob.batesStartNo = 2;
	aJob.batesEndNo = 4;
	aJob.batesStartNoOffset = 9;
	aJob.batesDigitNo = 1;


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( tc == 6403 )
	// Page番号(1-4) + Bates(3-4, offset 10)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.isBatesPrint = TRUE;
	aJob.batesStartNo = 3;
	aJob.batesEndNo = 4;
	aJob.batesStartNoOffset = 10;

	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eWithDenominatorAuto;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( tc == 6404 )
	// 表紙 + Page番号 + Bates(本文のみ)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.frontCoverMode = IotSc_CoverMode ::eOnWithImageNormal;
	aJob.isBatesPrint = TRUE;
	aJob.batesCondition = IotSc_AnnotationCondition::eAllExceptCover;
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eWithDenominatorAuto;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第1セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.sectionType =  IotSc_SheetType::eFrontCoverWithImage;
		// 第1セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		
		// 第2セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


end if;
',
	1,
	'',
	"7b78b5a9-d4c8-4c25-a51f-19fd4292e815");
INSERT INTO O_TFR
	VALUES ("6d0d674e-53a2-4f01-a2ae-b903b432a22f",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'outtrayOccupy',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 6501 )
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	V_OT::setOccupy( outtray : "IOTSHT_OUTTRAY_TOP",
			service : "IOTSHT_SERVICE_TYPE_FAX");
elif ( self.testCase == 6502 )
	// ２枚のStapleジョブだが、FIN1を占有されている

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	V_OT::setOccupy( outtray : "IOTSHT_OUTTRAY_FIN1",
			service : "IOTSHT_SERVICE_TYPE_FAX");

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.outtray = "IOTSHT_OUTTRAY_FIN1";
	aJob.staple = "IOT_STAPLE_LEFT_TAIL_SGL";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6503 )
	// FIN1指定だが、占有されているのでCENTERに出る。
	//warningが設定されないことを確認

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	V_OT::setOccupy( outtray : "IOTSHT_OUTTRAY_FIN1",
			service : "IOTSHT_SERVICE_TYPE_FAX");

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.outtray = "IOTSHT_OUTTRAY_FIN1";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6504 )
	// BI FOLD MULTを指定していたが、FIN2が占有
	//（実際にはないが、FOLDキャンセルのテスト)

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	V_OT::setOccupy( outtray : "IOTSHT_OUTTRAY_FIN2",
			service : "IOTSHT_SERVICE_TYPE_FAX");

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.outtray = "IOTSHT_OUTTRAY_FIN2";
	aJob.foldMode = "IOT_FOLD_BI_FOLD";
	aJob.foldBindMode = IotSc_FoldBindMode::eNeedCount;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6505 )
	// TOPトレイが占有でTOP指定。
	// 2ページ目にFIN1で出せない用紙種類(OHP)が指定される。

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	V_OT::setOccupy( outtray : "IOTSHT_OUTTRAY_TOP",
			service : "IOTSHT_SERVICE_TYPE_FAX");

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.outtray = "IOTSHT_OUTTRAY_TOP";
	aJob.runLength = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TRANSPARENCY";

end if;',
	1,
	'',
	"33e170ca-ed54-4c2c-a2e3-6d8160f36ad6");
INSERT INTO O_TFR
	VALUES ("5efeea7f-76a0-43c4-a0fd-1de7310d4b05",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'separatorCollate',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 6600 )
	//片面1ページ x 2部

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	select any aConfig from instances of V_CFG;
	aConfig.collateSeparatorSupport = 1;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;
	aJob.isSeparatorSheetJob = TRUE;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";



elif ( self.testCase == 6601 )
	//片面3ページ x 2部

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;
	aJob.isSeparatorSheetJob = TRUE;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション２ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
end if;
',
	1,
	'',
	"bc6cfdeb-2381-4e3d-867c-fbaf5b0a62e7");
INSERT INTO O_TFR
	VALUES ("bf1b0c54-8c01-4473-baaf-d65511ce8ea9",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'samplePrint',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 6650 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	//片面1ページ x 3部(外数サンプル: 2部目)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 5;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 3;
	aJob.spotCheckPosition3 = 4;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6651 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// 片面1ページ x 3部(外数サンプル: 2部目)
	// 管理番号印字
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 5;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 3;
	aJob.spotCheckPosition3 = 4;
	aJob.waterMarkMode = IotSc_WaterMarkMode::eOn;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.copiesNumStartOffset = 1;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif ( self.testCase == 6652 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// 片面1ページ x 3部(外数サンプル: 2部目)
	// 管理番号印字
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 5;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 3;
	aJob.spotCheckPosition3 = 4;
	aJob.waterMarkMode = IotSc_WaterMarkMode::eOn;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.copiesNumStartOffset = 1;

	aJob.isSeparatorSheetJob = TRUE;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6653 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// プルーフジョブ
	// 管理番号印字
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 5;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 3;
	aJob.spotCheckPosition3 = 4;
	aJob.waterMarkMode = IotSc_WaterMarkMode::eOn;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.copiesNumStartOffset = 1;

	aJob.isSeparatorSheetJob = TRUE;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

	aJob.isProof = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6654 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// 会議コピー
	// 管理番号印字
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 5;
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 3;
	aJob.spotCheckPosition3 = 4;
	aJob.waterMarkMode = IotSc_WaterMarkMode::eOn;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.copiesNumStartOffset = 1;

	aJob.isSeparatorSheetJob = TRUE;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

	aJob.nSet = IotSc_NSetMode::eOn;
	aJob.nSetTray = "IOTSHT_INTRAY_2";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "IOTSHT_MEDIUM_TYPE_TRANSPARENCY";



elif ( self.testCase == 6670 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	//片面2ページ x 1部(外数サンプル: 2ページ目)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.runLength = 0;
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 2;
	aJob.spotCheckPosition2 = 7;
	aJob.spotCheckPosition3 = 8;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6671 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	//片面2ページ x 1部(外数サンプル: 2ページ目)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.runLength = 0;
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 2;
	aJob.spotCheckPosition2 = 7;
	aJob.spotCheckPosition3 = 8;
	aJob.waterMarkMode = IotSc_WaterMarkMode::eOn;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.copiesNumStartOffset = 1;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6672 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	//片面2ページ x 1部(外数サンプル: 2ページ目)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.runLength = 0;
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 2;
	aJob.spotCheckPosition2 = 7;
	aJob.spotCheckPosition3 = 8;
	aJob.waterMarkMode = IotSc_WaterMarkMode::eOn;
	aJob.copiesNumPrintMode = IotSc_CopiesNumPrintMode::eOn;
	aJob.copiesNumStartOffset = 1;

	aJob.isSeparatorSheetJob = TRUE;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 6673 )

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	//片面2ページ x 1部(外数サンプル: 2ページ目)
	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.runLength = 0;
	aJob.isSpotCheckAdditional = TRUE;
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 5;
	aJob.spotCheckPosition3 = 9;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション6ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション7ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション8ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif ( self.testCase == 6680 )
	create object instance anExecutingJob of J_EJOB;
	create object instance aJob of J_JOB;
	relate anExecutingJob to aJob across R104;
	aJob.jobID = 1;

	S_SCI::addSpotCheckInstruction( jobID : aJob.jobID, position : 1, isAdditional : TRUE );
	S_SCI::addSpotCheckInstruction( jobID : aJob.jobID, position : 3, isAdditional : TRUE );
	S_SCI::addSpotCheckInstruction( jobID : aJob.jobID, position : 5, isAdditional : TRUE );
	S_SCI::addSpotCheckInstruction( jobID : aJob.jobID, position : 7, isAdditional : TRUE );

	create object instance aReplicater of S_RPR;
	aReplicater.createSpotCheckList( jobID : aJob.jobID, startNo: 4,  runlength : 2);
	S_SCI::deleteAllSpotCheckInstructions( jobID : aJob.jobID );
end if;
',
	1,
	'',
	"bebd4cd8-47a9-40c0-96f5-b5fb7ed4647b");
INSERT INTO O_TFR
	VALUES ("2920f4db-f211-47ba-adbb-5a3396b6583d",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'annotationMN',
	'

有効カウント : 0
表紙合紙を除くカウント : 0
種別 : 
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 1
表紙合紙を除くカウント : 0
種別 : 白紙（面）
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 表紙・合紙
打つ・打たない : ×
カウントアップする・しない : ×


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 上記以外
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 
表紙合紙を除くカウント : 1
種別 : 白紙（面）
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 表紙・合紙
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 上記以外
打つ・打たない : ×
カウントアップする・しない : ×


-----------------------

有効カウント : >1
表紙合紙を除くカウント : 0
種別 : 白紙（面）
打つ・打たない : ×
カウントアップする・しない : ×


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 表紙・合紙
打つ・打たない : ×
カウントアップする・しない : ×


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 上記以外
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 
表紙合紙を除くカウント : 1
種別 : 白紙（面）
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 表紙・合紙
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 上記以外
打つ・打たない : ○
カウントアップする・しない : ○


-----------------------

有効カウント : 
表紙合紙を除くカウント : >1
種別 : 白紙（面）
打つ・打たない : ×
カウントアップする・しない : ○


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 表紙・合紙
打つ・打たない : 
カウントアップする・しない : 


-----------------------

有効カウント : 
表紙合紙を除くカウント : 
種別 : 上記以外
打つ・打たない : ○
カウントアップする・しない : ○


-----------------------

',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Testする内容
// Annotation ConditionがeAllExceptCoverAndFirstValidPageOnFrontの時の動作を確認する
// トータルページも確認すること
// 1. 片面ジョブの時(3ページ) 
// 2.  片面ジョブの時(1ページ)
// 3. 両面ジョブの時(1ページ)
// 4. 両面ジョブの時(2ページ)
// 5. 両面ジョブの時(4ページ)
// 6. 表表紙（イメージつき）


if (  self.testCase == 6700 )
	// 1. 片面ジョブの時(3ページ) 
	// Totalは2,2シート目から1,2となる

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif ( self.testCase == 6701 )
	// 1. 片面ジョブの時(1ページ) 
	// Totalは0,ページ番号つかない

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (self.testCase == 6702 )
	// 両面ジョブの時(1ページ) 
	// Totalは0

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;


	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif (self.testCase == 6703 )
	// 両面ジョブの時(裏面から2ページ、計3ページ) 
	// Totalは2

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;


	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目(Blank)
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.blankPage = "IOTSHT_BLANK_PAGE_ON";

		// 第１セクション2ページ
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (self.testCase == 6704 )
	// 両面ジョブの時(計４ページ totalは３となるはず) 


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif (self.testCase == 6705 )
	// 表表紙つき　表表紙は片面、本文片面2ページ
	// 表紙にはAnnotationつかない。本文は1,2となるはず


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	

		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション2ページ
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (self.testCase == 6706 )
	// 表表紙つき　表表紙は両面、本文片面2ページ
	// 表紙にはAnnotation付かない。本文は1,2となるはず


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	

		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション2ページ
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (self.testCase == 6707 )
	// 表表紙つき　表表紙は両面(表面blank)、本文片面2ページ
	// 表紙にはAnnotation付かない。本文は1,2となるはず


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.blankPage = "IOTSHT_BLANK_PAGE_ON";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	

		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


		// 第１セクション2ページ
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif (self.testCase == 6708 )
	// 表表紙つき　表表紙は片面blank)、本文両面1ページ(表面は白)と両面1ページと両面1ページ（3セクション）
	// 両面セクションの裏が欠番になっているのがポイント
	// ただし先頭セクション表と最終セクションの裏は欠番にならない。
	// 表紙にはAnnotation付かない。本文は(1),(2),(4)となる。totalは4


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


	// 第2セクション
	// 両面
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	

		// 第１セクション１ページ目(Blank)
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.blankPage = "IOTSHT_BLANK_PAGE_ON";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


	// 第3セクション
	// 両面
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	

		// 第3セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第4セクション
	// 両面
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	

		// 第4セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (self.testCase == 6720 )
	// 小冊子
	// 本文8ページ
	// 2ページ目から打たれる


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;	

	i = 0;
	while ( i < 8 ) 
		// 第1セクションiページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = (i==0);
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i+1;
	end while;

elif (self.testCase == 6721 )
	// 小冊子右綴じ
	//　7ページ
	// 2ページ目から打たれる


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.signatureMode = IotSc_SignatureMode::eRightBind;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eRightBind;	

	i = 0;
	while ( i < 7 ) 
		// 第1セクションiページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = (i==0);
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i+1;
	end while;
	

elif (self.testCase == 6722 )
	// 小冊子左綴じ 7ページ
	//イメージ付き表紙
	// 3ページ目 1
	// 4ページ目 2
	// 5ページ目 3
	// 6ページ目 4　となる
	



	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
	aJob.frontCoverMode = IotSc_CoverMode::eOnWithImageNormal;		
	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
	aJob.frontCoverMediumType = "TESTTEST";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;	
	aSec.signaturePaddingMode = IotSc_SignaturePaddingMode::eNormal;

	i = 0;
	while ( i < 7 ) 
		// 第1セクションiページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = (i==0);
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i+1;
	end while;
	

elif (self.testCase == 6723 )
	// 小冊子右綴じ 7ページ
	//イメージ付き表紙（表面のみ)
	// 2ページ目 1
	// 3ページ目 2
	// 4ページ目 3
	// 5ページ目 4　
	// 6ページ目 5　となる
	


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;


	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.signatureMode = IotSc_SignatureMode::eRightBind;
	aJob.frontCoverMode = IotSc_CoverMode::eOnWithImageOnlySurfaceDuplex;		
	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
	aJob.frontCoverMediumType = "TESTTEST";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eRightBind;	

	i = 0;
	while ( i < 7 ) 
		// 第1セクションiページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = (i==0);
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i+1;
	end while;


elif (self.testCase == 6724 )
	// 小冊子右綴じ 6ページ
	//イメージ付き表紙 最終面を最初のページの隣に配置
	// 3ページ目 1
	// 4ページ目 2
	// 5ページ目 3 となる


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.signatureMode = IotSc_SignatureMode::eRightBind;
	aJob.frontCoverMode = IotSc_CoverMode::eOnWithImageOnlySurfaceDuplex;		
	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
	aJob.frontCoverMediumType = "TESTTEST";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eRightBind;	
	aSec.signaturePaddingMode = IotSc_SignaturePaddingMode::eBeforeLastPagePadding;

	i = 0;
	while ( i < 6 ) 
		// 第1セクションiページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = (i==0);
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i+1;
	end while;


elif (  self.testCase == 6725 )
	// 1. 片面ジョブの時(4ページ) 
	// 表紙合紙, 先頭ページを除くすべて(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6726 )
	// 1. 片面ジョブの時(表紙+3ページ) 
	// 表紙合紙を除く先頭ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eFirstPageOnlyExceptCover;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6727 )
	// 1. 片面ジョブの時(表紙+3ページ) 
	// 表紙合紙を除く先頭ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eFirstPageOnly;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6728 )
	// 1. 片面ジョブの時(表紙+3ページ) 
	// 全ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAll;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif (  self.testCase == 6729 )
	// 1. 片面ジョブの時(表紙+3ページ) 
	// 表紙を除く全ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAllExceptCover;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6730 )
	// 1. 片面ジョブの時(表紙+3ページ) 
	// 表紙/先頭ページを除く全ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";



elif (  self.testCase == 6731 )
	// 1. 片面ジョブの時(3ページ) 
	// 表紙合紙を除く先頭ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eFirstPageOnly;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6732 )
	// 1. 片面ジョブの時(3ページ) 
	// 表紙合紙を除く先頭ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eFirstPageOnlyExceptCover;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	
	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6733 )
	// 1. 片面ジョブの時(表紙) 
	// 全ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAll;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif (  self.testCase == 6734 )
	// 1. 片面ジョブの時(表紙+3ページ) 
	// 表紙を除く全ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAllExceptCover;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif (self.testCase == 6735 )
	// 小冊子左綴じ 7ページ
	//イメージ付き表紙

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
	aJob.frontCoverMode = IotSc_CoverMode::eOnWithImageNormal;		
	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
	aJob.frontCoverMediumType = "TESTTEST";
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eFirstPageOnlyExceptCover;
	aJob.stampColor = "IOT_IMAGE_COLOR_K";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	aSec.signaturePaddingMode = IotSc_SignaturePaddingMode::eNormal;

	i = 0;
	while ( i < 7 ) 
		// 第1セクションiページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = (i==0);
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i+1;
	end while;

elif (self.testCase == 6736 )
	// 小冊子左綴じ 7ページ
	//イメージ付き表紙

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.signatureMode = IotSc_SignatureMode::eLeftBind;
//	aJob.frontCoverMode = IotSc_CoverMode::eOnWithImageNormal;		
//	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
//	aJob.frontCoverMediumType = "TESTTEST";
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.stampColor = "IOT_IMAGE_COLOR_K";

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;
	aSec.signaturePaddingMode = IotSc_SignaturePaddingMode::eNormal;

	i = 0;
	while ( i < 7 ) 
		// 第1セクションiページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = (i==0);
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i+1;
	end while;

elif (  self.testCase == 6737 )
	// 1. 片面ジョブの時(表紙+3ページ) 
	// 表紙を除く全ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAllExceptCover;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";
	aJob.runLength = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;


	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (self.testCase == 6738 )
	// 小冊子右綴じ 7ページ
	//イメージ付き表紙（表面のみ)
	// 2ページ目 1
	// 3ページ目 2
	// 4ページ目 3
	// 5ページ目 4　
	// 6ページ目 5　となる
	


	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;


	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.signatureMode = IotSc_SignatureMode::eRightBind;
	aJob.frontCoverMode = IotSc_CoverMode::eOnWithImageOnlySurfaceDuplex;		
	aJob.frontCoverTray = "IOTSHT_INTRAY_SMH";
	aJob.frontCoverMediumType = "TESTTEST";
	aJob.runLength = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eRightBind;	

	i = 0;
	while ( i < 7 ) 
		// 第1セクションiページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = (i==0);
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		i = i+1;
	end while;


elif (  self.testCase == 6739 )
	// 表紙は両面
	// 1. 片面ジョブの時(表紙+3ページ) 
	// 表紙を除く全ページ(Stamp)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAllExceptCoverAndFirstValidPage;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";
	aJob.runLength = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;


	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex =  "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	//表紙
	aSec.sectionType = IotSc_SheetType::eFrontCoverWithImage;
	
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif (  self.testCase == 6740 )
	// 白紙表紙(裏)
	// 1ページ2部

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.backCoverMode = IotSc_CoverMode::eOnWithNoImage;
	aJob.backCoverTray = "IOTSHT_INPUT_TRAY_BACK";
	aJob.backCoverMediumType = "0";
	aJob.backCoverRunLength = 1;
	aJob.outtray = "IOTSHT_OUTTRAY_SIDE";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";

	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.stampMode = IotSc_StampAnnotationMode::eOn;
	aJob.stampCondition =  IotSc_AnnotationCondition::eAll;
	aJob.stampColor = "IOT_IMAGE_COLOR_B";
	aJob.runLength = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;


	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

end if;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("b1bf1e2a-9309-4971-a833-d02c33e176ef",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'colorAnnotation',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// ページ番号などのカラー化に伴うテスト
// カラーの組み合わせが重点的となる

if (  self.testCase == 6751 )
	// 1. 片面ジョブの時
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_R";

	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
	aJob.stampColor = "IOT_IMAGE_COLOR_R";
	aJob.stampCondition = IotSc_AnnotationCondition::eAll;



               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6752 )
	// とりあえず全部載せ （白黒）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_K";

	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 99;
	aJob.waterMarkColor = "IOT_IMAGE_COLOR_K";

	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
	aJob.isBatesPrint = true;
	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
	aJob.stampColor = "IOT_IMAGE_COLOR_K";
	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

//	aJob.formType = IotSc_FormType::eImageOverlay;
//	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
	aJob.isUUIDPrint = TRUE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.mergeSequenceNo = 13;

elif (  self.testCase == 6753 )
	// とりあえず全部載せ （カラーなのでフォームはなし）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_K";

	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
	aJob.isBatesPrint = true;
	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
	aJob.stampColor = "IOT_IMAGE_COLOR_K";
	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

//	aJob.formType = IotSc_FormType::eImageOverlay;
//	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
	aJob.isUUIDPrint = TRUE;

	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 99;
	aJob.waterMarkColor = "IOT_IMAGE_COLOR_M";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.mergeSequenceNo = 13;

elif (  self.testCase == 6754 )
	// 1プレーンでカラーができる場合
	// とりあえず全部載せ （カラーなのでフォームはなし）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;
	aSysData.mergePlaneNum = 1;
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_Y";

	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
	aJob.isBatesPrint = true;
	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
	aJob.stampColor = "IOT_IMAGE_COLOR_Y";
	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

//	aJob.formType = IotSc_FormType::eImageOverlay;
//	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
//	aJob.isUUIDPrint = TRUE;

	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
	aJob.waterMarkCharacter = 99;
	aJob.waterMarkColor = "IOT_IMAGE_COLOR_Y";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6755 )
	// 意外と単機能がだめの時があるので確認
	// とりあえず全部載せ （カラーなのでフォームはなし）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;
//	aSysData.mergePlaneNum = 1;
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_Y";

//	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
//	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
//	aJob.isBatesPrint = true;
//	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

//	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
//	aJob.stampColor = "IOT_IMAGE_COLOR_Y";
//	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

//	aJob.formType = IotSc_FormType::eImageOverlay;
//	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
//	aJob.isUUIDPrint = TRUE;

//	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
//	aJob.waterMarkCharacter = 99;
//	aJob.waterMarkColor = "IOT_IMAGE_COLOR_Y";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif (  self.testCase == 6756 )
	// 意外と単機能がだめの時があるので確認
	// とりあえず全部載せ （カラーなのでフォームはなし）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;
//	aSysData.mergePlaneNum = 1;
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
//	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
//	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_R";

	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
//	aJob.isBatesPrint = true;
//	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

//	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
//	aJob.stampColor = "IOT_IMAGE_COLOR_Y";
//	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

//	aJob.formType = IotSc_FormType::eImageOverlay;
//	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
//	aJob.isUUIDPrint = TRUE;

//	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
//	aJob.waterMarkCharacter = 99;
//	aJob.waterMarkColor = "IOT_IMAGE_COLOR_Y";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6757 )
	// 意外と単機能がだめの時があるので確認
	// とりあえず全部載せ （カラーなのでフォームはなし）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;
//	aSysData.mergePlaneNum = 1;
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
//	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
//	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_R";

//	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
//	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
	aJob.isBatesPrint = true;
	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

//	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
//	aJob.stampColor = "IOT_IMAGE_COLOR_Y";
//	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

//	aJob.formType = IotSc_FormType::eImageOverlay;
//	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
//	aJob.isUUIDPrint = TRUE;

//	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
//	aJob.waterMarkCharacter = 99;
//	aJob.waterMarkColor = "IOT_IMAGE_COLOR_Y";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif (  self.testCase == 6758 )
	// 意外と単機能がだめの時があるので確認
	// とりあえず全部載せ （カラーなのでフォームはなし）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;
//	aSysData.mergePlaneNum = 1;
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
//	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
//	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_R";

//	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
//	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
//	aJob.isBatesPrint = true;
//	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
	aJob.stampColor = "IOT_IMAGE_COLOR_Y";
	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

//	aJob.formType = IotSc_FormType::eImageOverlay;
//	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
//	aJob.isUUIDPrint = TRUE;

//	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
//	aJob.waterMarkCharacter = 99;
//	aJob.waterMarkColor = "IOT_IMAGE_COLOR_Y";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
elif (  self.testCase == 6759 )
	// 意外と単機能がだめの時があるので確認
	// とりあえず全部載せ （カラーなのでフォームはなし）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;
//	aSysData.mergePlaneNum = 1;
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
//	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
//	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_R";

//	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
//	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
//	aJob.isBatesPrint = true;
//	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

//	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
//	aJob.stampColor = "IOT_IMAGE_COLOR_Y";
//	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

	aJob.formType = IotSc_FormType::eImageOverlay;
	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
//	aJob.isUUIDPrint = TRUE;

//	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
//	aJob.waterMarkCharacter = 99;
//	aJob.waterMarkColor = "IOT_IMAGE_COLOR_Y";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.mergeSequenceNo = 13;

elif (  self.testCase == 6760 )
	// 意外と単機能がだめの時があるので確認
	// とりあえず全部載せ （カラーなのでフォームはなし）
	//  UUID / Water Mark / Page / Stamp /Date / Bates
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.isDigitalCodeOverWrite = FALSE;
//	aSysData.mergePlaneNum = 1;
	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
//	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eNormal;
//	aJob.pageCondition = IotSc_AnnotationCondition::eAll;
	aJob.pageNoColor = "IOT_IMAGE_COLOR_R";

//	aJob.dateAnnotationMode = IotSc_DateAnnotationMode::eOn;
//	aJob.dateCondition = IotSc_AnnotationCondition::eAll;
	
//	aJob.isBatesPrint = true;
//	aJob.batesCondition = IotSc_AnnotationCondition::eAll;

//	aJob.stampMode =  IotSc_StampAnnotationMode::eOn;
//	aJob.stampColor = "IOT_IMAGE_COLOR_Y";
//	aJob.stampCondition = IotSc_AnnotationCondition::eAll;

//	aJob.formType = IotSc_FormType::eImageOverlay;
//	aJob.formColor = "IOT_IMAGE_COLOR_K";	
	
	aJob.isUUIDPrint = TRUE;

//	aJob.waterMarkMode = IotSc_WaterMarkMode::eHybridWaterMarkOn;
//	aJob.waterMarkCharacter = 99;
//	aJob.waterMarkColor = "IOT_IMAGE_COLOR_Y";


               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

end if;',
	1,
	'',
	"18b91bf4-9d9a-416d-ba4e-c7c85ae7f089");
INSERT INTO O_TFR
	VALUES ("88eb7050-14f8-447f-aaca-03fb587ceafd",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'foldJob',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 6800 )
	// 1枚排出後、V_BRVCを生成してfinl_isFoldVailableOuttrayをFalseにセットすること
	// その後、割り込み再開。
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;
	aJob.outtray = "IOTSHT_OUTTRAY_FIN2";
	aJob.foldMode = "IOT_FOLD_BI_FOLD";
	aJob.foldBindMode = IotSc_FoldBindMode::eByNum;
	aJob.foldBindNum = 1;
	aJob.foldBindTotalNum =0;
	

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";
	
		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";

end if;
',
	1,
	'',
	"ee30ce4b-42ad-433b-9ffd-f7e879810132");
INSERT INTO O_TFR
	VALUES ("fe6bd9f9-54ed-477a-8075-9328a1df7e0b",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'traySwitch',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'
if (  self.testCase == 6850 )
// expression ''aTraySelect.traySwitch == expect'' (boolean) = 

	create object instance aTraySelect of S_TSP;
	expect = aTraySelect.traySwitch; // 型あわせ

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eNull;

// トレイ指定, APS/ATS可能, 紙質指定なし, 色指定なし, 
	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON";
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aSysData.traySwitch = IotSc_ATSExecMode::eOnMediumAtDTS;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


// トレイ指定, APS/ATS可能, 紙質指定あり, 色指定なし, 
	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON";
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aSysData.traySwitch = IotSc_ATSExecMode::eOnMediumAtDTS;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

// トレイ指定, APS/ATS不可, 紙質指定なし, 色指定なし, 
	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aSysData.traySwitch = IotSc_ATSExecMode::eOnMediumAtDTS;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


// トレイ指定, APS/ATS不可, 紙質指定あり, 色指定なし, 
	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aSysData.traySwitch = IotSc_ATSExecMode::eOnMediumAtDTS;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


elif (  self.testCase == 6851 )
// 指定トレイがATS禁止
// 実施前にFINL::isAtsProhibitedTray()が全てNGリターンするように変更すること
// expression ''aTraySelect.traySwitch == expect'' (boolean) = 

	create object instance aTraySelect of S_TSP;
	expect = aTraySelect.traySwitch; // 型あわせ

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eNull;

// トレイ指定, APS/ATS可能, 紙質指定なし, 色指定なし, 
	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eOnMediumAtDTS;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


// トレイ指定, APS/ATS可能, 紙質指定あり, 色指定なし, 
	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eOnMediumAtDTS;
	aTraySelect.inputTray = "IOTSHT_INTRAY_1";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_PLAIN";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

// トレイ指定, APS/ATS不可, 紙質指定なし, 色指定なし, 
	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eOnMediumAtDTS;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "0";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


// トレイ指定, APS/ATS不可, 紙質指定あり, 色指定なし, 
	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_MEDIUM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_LARGE_MEDIUM_SIZE";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAPSOnly;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aTraySelect.inputTray = "IOTSHT_INTRAY_2";
	aTraySelect.paperType = "IOTSHT_MEDIUM_TYPE_TEST_CANNOT_APS";
	aTraySelect.paperColorType = "0";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );

	expect = "IOTSHT_TRAY_SWITCH_OFF";
	aSysD = "IOTSHT_TRAY_SWITCH_OFF";
	aTray = "IOTSHT_TRAY_SWITCH_OFF";
	aTray = "IOTSHT_TRAY_SWITCH_OFF";
	aTray = "IOTSHT_TRAY_SWITCH_OFF";
	aTraySelect.traySwitch = "IOTSHT_TRAY_SWITCH_ON_BY_SYSTEM";
	aTraySelect.arrangementTraySwitch();
	FER::assert( expression : aTraySelect.traySwitch == expect );


end if;
',
	1,
	'',
	"a5c0a344-d64c-4c92-9f57-a117a6a81399");
INSERT INTO O_TFR
	VALUES ("bebd4cd8-47a9-40c0-96f5-b5fb7ed4647b",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'paperWeight',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// つぼ量対応
	// (本文/表紙/nSet/OHP合紙/Separator)につぼ量が入ること確認
	// 本文につぼ量を指定した場合ATS=紙質ATSになることを確認

if ( self.testCase == 35000 )
	// 表紙/nSet
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";

	aJob.frontCoverMode = IotSc_CoverMode::eOnWithNoImage;
	aJob.backCoverMode = IotSc_CoverMode::eOnWithNoImage;
	aJob.backCoverMediumWeight = "IOTSHT_COVER_BACK_WEIGHT";

	create object instance aFrontCover of V_CV;
	aFrontCover.isFront = TRUE;
	aFrontCover.inputTray = "IOTSHT_INTRAY_FCOVER";
	aFrontCover.mediumWeight = "IOTSHT_COVER_FCOVER_WEIGHT";

	create object instance aBackCover of V_CV;
	aBackCover.isFront = FALSE;
	aBackCover.inputTray = "IOTSHT_INTRAY_BCOVER";
	aBackCover.mediumWeight = "IOTSHT_COVER_BCOVER_WEIGHT";

	aJob.isSeparatorSheetJob = TRUE;
	aJob.separatorTray = "IOTSHT_SEPARAOR_TRAY";
	aJob.separatorMediumWeight = "IOTSHT_SEPARATOR_MEDIUM_WEIGHT";

	aJob.nSetTray = "IOTSHT_INTRAY_NSET";
	aJob.nSet = IotSc_NSetMode::eOn;
	aJob.nSetMediumWeight = "IOTSHT_NSET_MEDIUM_WEIGHT";

	aJob.interleafTray = "IOTSHT_INTRAY_INTERLEAF";
	aJob.interleafMode = IotSc_InterleafMode::eOnWithImage;
	aJob.interleafMediumWeight = "IOTSHT_INTERLEAF_MEDIUM_WEIGHT";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.paperWeight = "IOTSHT_MEDIUM_WEIGHT_1";
	aSec.ats = "IOTSHT_TRAY_SWITCH_ON";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 35001 )
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";

	aJob.isSeparatorSheetJob = TRUE;
	aJob.separatorTray = "IOTSHT_SEPARAOR_TRAY";
	aJob.separatorMediumWeight = "IOTSHT_SEPARATOR_MEDIUM_WEIGHT";

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.outputSize = "IOTSHT_MEDIUM_SIZE_SEC";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.inputTray = "IOTSHT_INTRAY_SEC";
	aSec.paperWeight = "IOTSHT_SEC_MEDIUM_WEIGHT";
	aSec.ats = "IOTSHT_TRAY_SWITCH_ON";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_PAGE";
		aPage.ats = "IOTSHT_TRAY_SWITCH_ON";
		aPage.paperType = "0";
		aPage.paperWeight = "IOTSHT_PAGE_MEDIUM_WEIGHT";
end if;
',
	1,
	'',
	"6feaeb2e-ab18-4b04-9752-ec2b0c0564b8");
INSERT INTO O_TFR
	VALUES ("a5c0a344-d64c-4c92-9f57-a117a6a81399",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'subsetOffset',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 35100 )
	// Sec1 5ページ, 両面
	// Sec2 5ページ, 両面

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;

	aJob.internalOffsetMode = IotSc_OffsetMode::ePage;
	aJob.subsetOffsetNum = 3;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第2セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション4ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第2セクション5ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 35101 )
	// Sec1 5ページ, 両面
	// Sec2 5ページ, 両面

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;
	pageCopies = 2;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 1;

	aJob.internalOffsetMode = IotSc_OffsetMode::ePage;
	aJob.subsetOffsetNum = 3;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	pageNum = 5;
	while ( pageNum > 0 )
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = pageCopies;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		pageNum = pageNum - 1;
	end while;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	pageNum = 5;
	while ( pageNum > 0 )
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = pageCopies;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		pageNum = pageNum - 1;
	end while;

elif ( self.testCase == 35102 )
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 1;

	aJob.frontCoverMode = IotSc_CoverMode::eOnWithNoImage;
	aJob.frontCoverTray = "IOTSHT_INTRAY_COVER_F";

	aJob.internalOffsetMode = IotSc_OffsetMode::ePage;
	aJob.subsetOffsetNum = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	pageNum = 3;
	pageCopies = 1;
	while ( pageNum > 0 )
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = pageCopies;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		pageNum = pageNum - 1;
	end while;


elif ( self.testCase == 35103 )
	// バナー + ページ指定オフセット
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.bannerMode = IotSc_BannerMode::eStartAndEndBanner;
	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 2;

	aJob.internalOffsetMode = IotSc_OffsetMode::ePage;
	aJob.subsetOffsetNum = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第1セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	pageNum = 3;
	pageCopies = 1;
	while ( pageNum > 0 )
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = pageCopies;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		pageNum = pageNum - 1;
	end while;


// バナーオフセット
elif ( self.testCase == 35110 )
	// 1ページ, Start & Endバナーオフセット, ジョブオフセット

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;
	aSysData.isBannerOffsetAvailable = TRUE;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.runLength = 1;

	aJob.internalOffsetMode = IotSc_OffsetMode::eOn_Job;
	aJob.bannerMode = IotSc_BannerMode::eStartAndEndBanner;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


// ページ指定オフセット
elif ( self.testCase == 35120 )
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 1;

	aJob.internalOffsetMode = IotSc_OffsetMode::eCopies;
	aJob.subsetOffsetNum = 3;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 35121 )
	// 位置指定サンプルとの組み合わせ(1, 4 内数)
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 1;

	aJob.outtray = "IOTSHT_OUTTRAY_HCS1";
	aJob.isSpotCheckAdditional = FALSE;
	aJob.spotCheckPosition1 = 1;
	aJob.spotCheckPosition2 = 4;
	aJob.spotCheckPosition3 = 100;

	aJob.internalOffsetMode = IotSc_OffsetMode::eCopies;
	aJob.subsetOffsetNum = 3;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 5;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

elif ( self.testCase == 35122 )
	// 部数指定オフセット
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 1;

	aJob.internalOffsetMode = IotSc_OffsetMode::eCopies;
	aJob.subsetOffsetNum = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 2;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";


elif ( self.testCase == 35123 )
	// Sec1 5ページ, 両面
	// Sec2 5ページ, 両面

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	// aJob.jobType = "IOT_JOB_TYPE_BUFFER_BRIDGE_COPY";

	aJob.exitFace = "IOTSHT_EXIT_FACE_DOWN";
	aJob.outtray = "IOTSHT_OUTTRAY_CENTER";
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.runLength = 2;

	// セパレータ
	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isSeparatorSheetJob = True;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

	aJob.internalOffsetMode = IotSc_OffsetMode::ePage;
	aJob.subsetOffsetNum = 2;

               rdocID = V_RDOC::createInstance( jobID :jobID );

               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
                // パラメータを変更する場合はここで入れる
	// aDoc.xxx = YYY;
	aDoc.collateMode =  "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.pageCopies = 1;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";

end if;

',
	1,
	'',
	"28ea6e93-f4e5-4ba5-a4fb-88b9e5bc7887");
INSERT INTO O_TFR
	VALUES ("9dd9b90e-f096-4526-b98f-bb8ad6814a6d",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'seal',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// SEAL対応のテスト
// 1. 1ジョブ1ページのシール指定(A4L)
// 2. 1ジョブ3ページのシール指定(A4L, A4L, A3) A4Lで2回Sealを作らないこと

if ( self.testCase == 35200 )
	// 1. 1ジョブ1ページのシール指定(A4L)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.sealTemplateId = 10;
	aJob.isSealDrawPhaseBeforeStorage = TRUE;
	aJob.isSealDrawPhaseAfterStorage = FALSE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

elif ( self.testCase == 35201 )
	// 2. 1ジョブ3ページのシール指定(A4L, A4L, A3) A4Lで2回Sealを作らないこと

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる
	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.sealTemplateId = 10;
	aJob.isSealDrawPhaseBeforeStorage = TRUE;
	aJob.isSealDrawPhaseAfterStorage = FALSE;

               rdocID = V_RDOC::createInstance( jobID :jobID );
               
               docID = V_DOC::createInstance( rdocID : rdocID );
               select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_NULL";
	aSec.outputSize = "IOTSHT_MEDIUM_SIZE_NULL";
	
		// 第１セクション１ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;
		aPage.outputSize = "IOTSHT_MEDIUM_SIZE_A4";
		aPage.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;
		aPage.outputSize = "IOTSHT_MEDIUM_SIZE_A4";
		aPage.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション3ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;
		aPage.outputSize = "IOTSHT_MEDIUM_SIZE_A3";
		aPage.dir = "IOTSHT_MEDIUM_DIRECTION_SEF";

end if;
',
	1,
	'',
	"bf1b0c54-8c01-4473-baaf-d65511ce8ea9");
INSERT INTO O_TFR
	VALUES ("bc6cfdeb-2381-4e3d-867c-fbaf5b0a62e7",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	'seal2',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'if ( self.testCase == 35300 )

	// FaceDown
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.isTotalValidPageCountOnJob = TRUE;
	aJob.isValidPageCountOnJob = TRUE;

      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	// 第１セクション1ページ目
	pageID = V_PAGE::createInstance( secID : secID );
	select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
	aPage.setDefaultValue();
	aPage.isFirstValidPage = TRUE;
	aPage.inputTray = "IOTSHT_INTRAY_1";
	aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
	aPage.paperType = "0";
	aPage.pageCopies= 0;

	// 第１セクション2ページ目
	pageID = V_PAGE::createInstance( secID : secID );
	select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
	aPage.setDefaultValue();
	aPage.isFirstValidPage = TRUE;
	aPage.inputTray = "IOTSHT_INTRAY_1";
	aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
	aPage.paperType = "0";
	aPage.pageCopies= 0;


elif ( self.testCase == 35301 )

	// Face Up

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.exitFace = "IOTSHT_EXIT_FACE_UP";
	aJob.isTotalValidPageCountOnJob = TRUE;
	aJob.isValidPageCountOnJob = TRUE;

      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	// 第１セクション1ページ目
	pageID = V_PAGE::createInstance( secID : secID );
	select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
	aPage.setDefaultValue();
	aPage.isFirstValidPage = TRUE;
	aPage.inputTray = "IOTSHT_INTRAY_1";
	aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
	aPage.paperType = "0";
	aPage.pageCopies= 0;

	// 第１セクション2ページ目
	pageID = V_PAGE::createInstance( secID : secID );
	select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
	aPage.setDefaultValue();
	aPage.isFirstValidPage = TRUE;
	aPage.inputTray = "IOTSHT_INTRAY_1";
	aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
	aPage.paperType = "0";
	aPage.pageCopies= 0;

elif ( self.testCase == 35304 )
	// 欠番処理

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.isTotalValidPageCountOnJob = TRUE;
	aJob.isValidPageCountOnJob = TRUE;

	// RDOC1
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	// 第1セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第１セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

	// 第2セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第2セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

		// 第2セクション2ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

	// 第3セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		// 第3セクション1ページ目
		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

elif ( self.testCase == 35307 )

	// MultiDoc + アンコレートばらし

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isTotalValidPageCountOnJob = TRUE;
	aJob.isValidPageCountOnJob = TRUE;

	// セパレータ(アンコレートばらし)
	aJob.isSeparatorSheetJob = True;
	aJob.separatorTray = "IOTSHT_INTRAY_2";
	aJob.separatorSize = "IOTSHT_MEDIUM_SIZE_A4";
	aJob.separatorMediumType = "IOTSHT_MEDIUM_TYPE_STATIONARY";
	aJob.separatorDirection = "IOTSHT_MEDIUM_DIRECTION_LEF";

	// RDOC1
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";

	// 第１セクション
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	// 第１セクション1ページ目
	pageID = V_PAGE::createInstance( secID : secID );
	select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
	aPage.setDefaultValue();
	aPage.isFirstValidPage = TRUE;
	aPage.inputTray = "IOTSHT_INTRAY_1";
	aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
	aPage.paperType = "0";
	aPage.pageCopies= 0;

	// RDOC2
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_OFF";

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	pageID = V_PAGE::createInstance( secID : secID );
	select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
	aPage.setDefaultValue();
	aPage.isFirstValidPage = TRUE;
	aPage.inputTray = "IOTSHT_INTRAY_1";
	aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
	aPage.paperType = "0";
	aPage.pageCopies= 5;


	// RDOC3
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";

	// SEC
	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_SIMPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

	// PAGE
	pageID = V_PAGE::createInstance( secID : secID );
	select any aPage from instances of V_PAGE
			where ( selected.pageID == pageID );
	aPage.setDefaultValue();
	aPage.isFirstValidPage = TRUE;
	aPage.inputTray = "IOTSHT_INTRAY_1";
	aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
	aPage.paperType = "0";
	aPage.pageCopies= 0;

elif ( self.testCase == 35308 )

	// MultiDoc + 欠番 + 総ページ(パースセット)

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isTotalValidPageCountOnJob = TRUE;
	aJob.isValidPageCountOnJob = TRUE;
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eWithDenominatorAuto;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;

	// DOC 1
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;


	// DOC 2
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

	// Doc3
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;


elif ( self.testCase == 35310 )

	// ブランクページ

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isTotalValidPageCountOnJob = TRUE;
	aJob.isValidPageCountOnJob = TRUE;
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eWithDenominatorAuto;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;

	// DOC 1
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;
		aPage.blankPage = "IOTSHT_BLANK_PAGE_ON";


	// DOC 2
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;


	// Doc3
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = FALSE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;


elif ( self.testCase == 35311 )

	// 小冊子

	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる

	aJob.collateMode = "IOT_COLLATE_OFF";
	aJob.isTotalValidPageCountOnJob = TRUE;
	aJob.isValidPageCountOnJob = TRUE;
	aJob.pageAnnotationMode = IotSc_PageAnnotationMode::eWithDenominatorAuto;
	aJob.pageCondition = IotSc_AnnotationCondition::eAll;

	// DOC 1
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";
	aDoc.signatureMode = IotSc_SignatureMode::eLeftBind;

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";
	aSec.signatureMode = IotSc_SignatureMode::eLeftBind;

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

elif ( self.testCase == 35312 )

	// 小冊子
	V_AJA::createInstance();
	create object instance anAutoPrintPause of V_APP;
	create object instance anAutoAutoJobCancel of V_AJC;

	// システムデータの設定
	select any aSysData from instances of V_SD;
	aSysData.traySwitch = IotSc_ATSExecMode::eAlways;

	jobID = 1;
	V_JOB::createInstance( jobID : jobID );
               select any aJob from instances of V_JOB where ( selected.jobID == jobID );
                // パラメータを変更する場合はここで入れる

	aJob.collateMode = "IOT_COLLATE_ON";
	aJob.isValidPageCountOnJob = TRUE;

	// DOC 1
      rdocID = V_RDOC::createInstance( jobID :jobID );
      docID = V_DOC::createInstance( rdocID : rdocID );
      select any aDoc from instances of V_DOC where ( selected.docID == docID );
	aDoc.collateMode = "IOT_COLLATE_ON";
	aDoc.signatureMode = IotSc_SignatureMode::eLeftBind;

	secID = V_SEC::createInstance( docID : docID );
	select any aSec from instances of V_SEC
		where ( selected.secID == secID );
	aSec.setDefaultValue();
	aSec.plex = "IOTSHT_PLEX_DUPLEX";
	aSec.dir = "IOTSHT_MEDIUM_DIRECTION_LEF";

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;

		pageID = V_PAGE::createInstance( secID : secID );
		select any aPage from instances of V_PAGE
				where ( selected.pageID == pageID );
		aPage.setDefaultValue();
		aPage.isFirstValidPage = TRUE;
		aPage.inputTray = "IOTSHT_INTRAY_1";
		aPage.ats = "IOTSHT_TRAY_SWITCH_OFF";
		aPage.paperType = "0";
		aPage.pageCopies= 0;



end if;

',
	1,
	'',
	"9dd9b90e-f096-4526-b98f-bb8ad6814a6d");
INSERT INTO O_NBATTR
	VALUES ("93a62f5d-3f5b-4a1e-9e14-2da9dd0d4288",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c");
INSERT INTO O_BATTR
	VALUES ("93a62f5d-3f5b-4a1e-9e14-2da9dd0d4288",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c");
INSERT INTO O_ATTR
	VALUES ("93a62f5d-3f5b-4a1e-9e14-2da9dd0d4288",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	"00000000-0000-0000-0000-000000000000",
	'ID',
	'',
	'',
	'ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000005",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("82063620-bb6c-4af9-a0b2-ee902dcf0942",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c");
INSERT INTO O_BATTR
	VALUES ("82063620-bb6c-4af9-a0b2-ee902dcf0942",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c");
INSERT INTO O_ATTR
	VALUES ("82063620-bb6c-4af9-a0b2-ee902dcf0942",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	"93a62f5d-3f5b-4a1e-9e14-2da9dd0d4288",
	'testCase',
	'',
	'',
	'testCase',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c");
INSERT INTO O_OIDA
	VALUES ("93a62f5d-3f5b-4a1e-9e14-2da9dd0d4288",
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	0,
	'ID');
INSERT INTO O_ID
	VALUES (1,
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c");
INSERT INTO O_ID
	VALUES (2,
	"9c89393f-b8fc-45b1-82cb-85fedafcbe6c");
INSERT INTO PE_PE
	VALUES ("9c89393f-b8fc-45b1-82cb-85fedafcbe6c",
	1,
	"f249cc43-4e9f-46e0-a3e8-3e11ce7e2ee3",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("f249cc43-4e9f-46e0-a3e8-3e11ce7e2ee3",
	"00000000-0000-0000-0000-000000000000",
	"fd41c346-e09d-469b-a4ca-1610b026ce44",
	'Verify',
	'',
	500,
	'../Verify.xtuml');
